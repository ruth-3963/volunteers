import moment from 'moment';
export declare const todayDate: (i: number) => moment.Moment;
declare const DemoData: {
    resources: {
        id: string;
        name: string;
        parentId: string;
    }[];
    events: ({
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        bgColor: string;
        showPopover: boolean;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        resizable: boolean;
        bgColor?: undefined;
        showPopover?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        movable: boolean;
        bgColor?: undefined;
        showPopover?: undefined;
        resizable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        startResizable: boolean;
        bgColor?: undefined;
        showPopover?: undefined;
        resizable?: undefined;
        movable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        endResizable: boolean;
        bgColor?: undefined;
        showPopover?: undefined;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        bgColor?: undefined;
        showPopover?: undefined;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        bgColor: string;
        showPopover?: undefined;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        movable: boolean;
        resizable: boolean;
        bgColor: string;
        showPopover?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
        rrule?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        rrule: string;
        bgColor: string;
        showPopover?: undefined;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
    })[];
    eventsForTaskView: {
        id: string;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        bgColor: string;
        groupId: number;
        groupName: string;
        item: {};
    }[];
    eventsForCustomEventStyle: ({
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        bgColor: string;
        type: number;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        resizable: boolean;
        type: number;
        bgColor?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        movable: boolean;
        type: number;
        bgColor?: undefined;
        resizable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        startResizable: boolean;
        type: number;
        bgColor?: undefined;
        resizable?: undefined;
        movable?: undefined;
        endResizable?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        endResizable: boolean;
        type: number;
        bgColor?: undefined;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        type: number;
        bgColor?: undefined;
        resizable?: undefined;
        movable?: undefined;
        startResizable?: undefined;
        endResizable?: undefined;
    } | {
        id: number;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        movable: boolean;
        resizable: boolean;
        bgColor: string;
        type: number;
        startResizable?: undefined;
        endResizable?: undefined;
    })[];
    eventsOfOverlap: {
        id: string;
        start: string;
        end: string;
        resourceId: string;
        title: string;
        bgColor: string;
        groupId: number;
        groupName: string;
        item: {};
    }[];
    tasks: {
        id: string;
        name: string;
        title: string;
        bgColor: string;
        item: {};
    }[];
};
export default DemoData;
