import React from 'react';
import { SchedulerData, SchedulerProps } from 'src/core';
import { MovedState, ResourceEvent } from 'src/core/types';
export interface Props extends Partial<SchedulerProps> {
    schedulerData: SchedulerData;
    onScrollEnd: (isVertical: boolean, isHorizontal: boolean) => void;
    schedulerContentRef: React.RefObject<HTMLDivElement>;
    renderResource?: (resourceEvent: ResourceEvent) => React.ReactElement;
    toggleExpandFunc?: (schedulerData: SchedulerData, slotId: string) => void;
    onBeginDrag?: (eventItem: any) => void;
    onEventResize?: (eventItem: any) => void;
}
export interface State {
    scrollLeft: number;
    scrollTop: number;
    movedState: MovedState;
}
declare class BodyView extends React.Component<Props, State> {
    private readonly timeHeaderRef;
    private readonly resourceListRef;
    private readonly schedulerBoardScrollAreaRef;
    private schedulerBoardScrollAreaEle;
    private timeHeaderEle;
    private resourceListEle;
    private scrollTimeout;
    private preHoverTime;
    private movedState;
    constructor(props: Props);
    componentWillUnmount(): void;
    handleChangeMovedState: (movedState: MovedState) => void;
    onSchedulerAreaScroll: () => void;
    onSchedulerContentScroll: () => void;
    handleHover(params: any): void;
    handleToggleExpand: (slotId: string) => void;
    handleDraggingChanged: (isDragging: boolean) => void;
    render(): JSX.Element;
}
export default BodyView;
