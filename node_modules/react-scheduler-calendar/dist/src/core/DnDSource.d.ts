import { DragSourceConnector, DragSourceMonitor } from 'react-dnd';
import { ConnectDragPreview, ConnectDragSource } from 'react-dnd/lib/interfaces';
import { DnDTypes } from 'src/lib/DnDTypes';
export interface DnDSourceCollectProps {
    connectDragSource: ConnectDragSource;
    isDragging: boolean;
    connectDragPreview: ConnectDragPreview;
}
export declare class DnDSource {
    private readonly resolveDragObjFunc;
    private readonly DecoratedComponent;
    private readonly dndType;
    private readonly dragSource;
    constructor(resolveDragObjFunc: (args: any) => any, DecoratedComponent: any, dndType?: DnDTypes);
    getDragSpec: () => {
        beginDrag: (props: any) => any;
        endDrag: (props: any, monitor: DragSourceMonitor) => void;
        canDrag: (props: any) => any;
    };
    getDragCollect: (connect: DragSourceConnector, monitor: DragSourceMonitor) => DnDSourceCollectProps;
    getDragSource: () => any;
    getDndType: () => DnDTypes;
}
