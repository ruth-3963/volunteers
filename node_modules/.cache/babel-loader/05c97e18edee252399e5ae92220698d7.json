{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\volunteers\\\\src\\\\scheduler\\\\Scheduler.js\";\nimport React, { Component } from 'react';\nimport { DayPilot, DayPilotScheduler } from \"daypilot-pro-react\";\nimport { SchedulerRow } from './SchedulerRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeHeaders: [{\n        \"groupBy\": \"Week\",\n        \"format\": \"d\"\n      }],\n      scale: \"Day\",\n      days: 61,\n      startDate: \"2021-08-01\",\n      timeRangeSelectedHandling: \"Enabled\",\n      rowHeaderWidth: 100,\n      onTimeRangeSelected: function (args) {\n        var dp = this;\n        DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\n          dp.clearSelection();\n\n          if (!modal.result) {\n            return;\n          }\n\n          dp.events.add({\n            start: args.start,\n            end: args.end,\n            id: DayPilot.guid(),\n            resource: args.resource,\n            text: modal.result\n          });\n        });\n      },\n      treeEnabled: true,\n      onBeforeRowHeaderRender: function (args) {\n        args.row.areas = [{\n          right: 3,\n          top: 3,\n          height: 12,\n          width: 12,\n          icon: \"icon-info\",\n          style: \"cursor: pointer\",\n          onClick: function (args) {\n            var row = args.source;\n            DayPilot.Modal.alert(row.name);\n          }\n        }];\n      },\n      onBeforeRowHeaderDomAdd: function (args) {\n        args.target = \"Cell\";\n        args.element = /*#__PURE__*/_jsxDEV(SchedulerRow, {\n          row: args.row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    // load resource and event data\n    this.setState({\n      resources: [{\n        name: \"Resource A\",\n        id: \"A\"\n      }, {\n        name: \"Resource B\",\n        id: \"B\"\n      }, {\n        name: \"Resource C\",\n        id: \"C\"\n      }, {\n        name: \"Resource D\",\n        id: \"D\"\n      }, {\n        name: \"Resource E\",\n        id: \"E\"\n      }, {\n        name: \"Resource F\",\n        id: \"F\"\n      }, {\n        name: \"Resource G\",\n        id: \"G\"\n      }],\n      events: [{\n        id: 1,\n        text: \"Event 1\",\n        start: \"2021-08-02T00:00:00\",\n        end: \"2021-08-05T00:00:00\",\n        resource: \"A\"\n      }, {\n        id: 2,\n        text: \"Event 2\",\n        start: \"2021-08-03T00:00:00\",\n        end: \"2021-08-10T00:00:00\",\n        resource: \"C\",\n        barColor: \"#38761d\",\n        barBackColor: \"#93c47d\"\n      }, {\n        id: 3,\n        text: \"Event 3\",\n        start: \"2021-08-02T00:00:00\",\n        end: \"2021-08-08T00:00:00\",\n        resource: \"D\",\n        barColor: \"#f1c232\",\n        barBackColor: \"#f1c232\"\n      }, {\n        id: 4,\n        text: \"Event 3\",\n        start: \"2021-08-02T00:00:00\",\n        end: \"2021-08-08T00:00:00\",\n        resource: \"E\",\n        barColor: \"#cc0000\",\n        barBackColor: \"#ea9999\"\n      }]\n    });\n    window[\"dp\"] = this.scheduler;\n  }\n\n  render() {\n    var { ...config\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DayPilotScheduler, { ...config,\n        ref: component => {\n          this.scheduler = component && component.control;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Scheduler;","map":{"version":3,"sources":["C:/Users/User/volunteers/src/scheduler/Scheduler.js"],"names":["React","Component","DayPilot","DayPilotScheduler","SchedulerRow","Scheduler","constructor","props","state","timeHeaders","scale","days","startDate","timeRangeSelectedHandling","rowHeaderWidth","onTimeRangeSelected","args","dp","Modal","prompt","then","modal","clearSelection","result","events","add","start","end","id","guid","resource","text","treeEnabled","onBeforeRowHeaderRender","row","areas","right","top","height","width","icon","style","onClick","source","alert","name","onBeforeRowHeaderDomAdd","target","element","componentDidMount","setState","resources","barColor","barBackColor","window","scheduler","render","config","component","control"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {DayPilot, DayPilotScheduler} from \"daypilot-pro-react\";\r\nimport {SchedulerRow} from './SchedulerRow';\r\n\r\nclass Scheduler extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      timeHeaders: [ {\"groupBy\": \"Week\", \"format\": \"d\"}],\r\n      scale: \"Day\",\r\n      days: 61,\r\n      startDate: \"2021-08-01\",\r\n      timeRangeSelectedHandling: \"Enabled\",\r\n      rowHeaderWidth: 100,\r\n      onTimeRangeSelected: function (args) {\r\n        var dp = this;\r\n        DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\r\n          dp.clearSelection();\r\n          if (!modal.result) {\r\n            return;\r\n          }\r\n          dp.events.add({\r\n            start: args.start,\r\n            end: args.end,\r\n            id: DayPilot.guid(),\r\n            resource: args.resource,\r\n            text: modal.result\r\n          });\r\n        });\r\n      },\r\n      treeEnabled: true,\r\n      onBeforeRowHeaderRender: function (args) {\r\n        args.row.areas = [\r\n          {\r\n            right: 3,\r\n            top: 3,\r\n            height: 12,\r\n            width: 12,\r\n            icon: \"icon-info\",\r\n            style: \"cursor: pointer\",\r\n            onClick: function (args) {\r\n              var row = args.source;\r\n              DayPilot.Modal.alert(row.name);\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      onBeforeRowHeaderDomAdd: function (args) {\r\n        args.target = \"Cell\";\r\n        args.element = <SchedulerRow row={args.row}/>;\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // load resource and event data\r\n    this.setState({\r\n      resources: [\r\n        {name: \"Resource A\", id: \"A\"},\r\n        {name: \"Resource B\", id: \"B\"},\r\n        {name: \"Resource C\", id: \"C\"},\r\n        {name: \"Resource D\", id: \"D\"},\r\n        {name: \"Resource E\", id: \"E\"},\r\n        {name: \"Resource F\", id: \"F\"},\r\n        {name: \"Resource G\", id: \"G\"}\r\n      ],\r\n      events: [\r\n        {\r\n          id: 1,\r\n          text: \"Event 1\",\r\n          start: \"2021-08-02T00:00:00\",\r\n          end: \"2021-08-05T00:00:00\",\r\n          resource: \"A\"\r\n        },\r\n        {\r\n          id: 2,\r\n          text: \"Event 2\",\r\n          start: \"2021-08-03T00:00:00\",\r\n          end: \"2021-08-10T00:00:00\",\r\n          resource: \"C\",\r\n          barColor: \"#38761d\",\r\n          barBackColor: \"#93c47d\"\r\n        },\r\n        {\r\n          id: 3,\r\n          text: \"Event 3\",\r\n          start: \"2021-08-02T00:00:00\",\r\n          end: \"2021-08-08T00:00:00\",\r\n          resource: \"D\",\r\n          barColor: \"#f1c232\",\r\n          barBackColor: \"#f1c232\"\r\n        },\r\n        {\r\n          id: 4,\r\n          text: \"Event 3\",\r\n          start: \"2021-08-02T00:00:00\",\r\n          end: \"2021-08-08T00:00:00\",\r\n          resource: \"E\",\r\n          barColor: \"#cc0000\",\r\n          barBackColor: \"#ea9999\"\r\n        }\r\n      ]\r\n    });\r\n\r\n    window[\"dp\"] = this.scheduler;\r\n\r\n  }\r\n\r\n  render() {\r\n    var {...config} = this.state;\r\n    return (\r\n      <div>\r\n        <DayPilotScheduler\r\n          {...config}\r\n          ref={component => {\r\n            this.scheduler = component && component.control;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scheduler;\r\n"]},"metadata":{},"sourceType":"module"}