{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\scheduler\\\\calendar.jsx\";\nimport React, { Component } from 'react';\nimport { DayPilot, DayPilotCalendar, DayPilotNavigator } from \"daypilot-pro-react\";\nimport \"./CalendarStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  wrap: {\n    display: \"flex\"\n  },\n  left: {\n    marginRight: \"10px\"\n  },\n  main: {\n    flexGrow: \"1\"\n  }\n};\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewType: \"Week\",\n      durationBarVisible: false,\n      timeRangeSelectedHandling: \"Enabled\",\n      onTimeRangeSelected: args => {\n        let dp = this.calendar;\n        DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\n          dp.clearSelection();\n\n          if (!modal.result) {\n            return;\n          }\n\n          dp.events.add(new DayPilot.Event({\n            start: args.start,\n            end: args.end,\n            id: DayPilot.guid(),\n            text: modal.result\n          }));\n        });\n      },\n      eventDeleteHandling: \"Update\",\n      onEventClick: args => {\n        let dp = this.calendar;\n        DayPilot.Modal.prompt(\"Update event text:\", args.e.text()).then(function (modal) {\n          if (!modal.result) {\n            return;\n          }\n\n          console.log(args);\n          args.e.data.text = modal.result;\n          dp.events.update(args.e);\n        });\n      },\n      onBeforeCellRender: args => {\n        if (args.cell.start.getDay() === 14 && args.cell.start.getHours() > 9) {\n          args.cell.html = \"<h6>ejhik</h6>\";\n        }\n      },\n      onEventEdited: args => {\n        console.log(\"event edit\", args);\n      }\n    };\n  }\n\n  componentDidMount() {\n    // load event data\n    this.setState({\n      startDate: \"2021-09-15\",\n      events: [{\n        id: 1,\n        text: \"Event 1\",\n        start: \"2021-09-13T10:30:00\",\n        end: \"2021-09-13T13:00:00\",\n        moveDisabled: true,\n        clickDisabled: true,\n        resizeDisabled: true,\n        deleteDisabled: true\n      }, {\n        id: 2,\n        text: \"Event 2\",\n        start: \"2021-09-14T09:30:00\",\n        end: \"2021-09-14T11:30:00\",\n        backColor: \"#38761d\"\n      }, {\n        id: 2,\n        text: \"Event 3\",\n        start: \"2021-09-14T12:00:00\",\n        end: \"2021-09-14T15:00:00\",\n        backColor: \"#cc4125\"\n      }]\n    });\n  }\n\n  render() {\n    var { ...config\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.wrap,\n      children: [\"=\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.left,\n        children: /*#__PURE__*/_jsxDEV(DayPilotNavigator, {\n          selectMode: \"week\",\n          showMonths: 3,\n          skipMonths: 3,\n          onTimeRangeSelected: args => {\n            this.setState({\n              startDate: args.day\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: /*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config,\n          ref: component => {\n            this.calendar = component && component.control;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(\"calender\", this.calendar ? this.calendar : \"\");\n        },\n        children: \"calender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/scheduler/calendar.jsx"],"names":["React","Component","DayPilot","DayPilotCalendar","DayPilotNavigator","styles","wrap","display","left","marginRight","main","flexGrow","Calendar","constructor","props","state","viewType","durationBarVisible","timeRangeSelectedHandling","onTimeRangeSelected","args","dp","calendar","Modal","prompt","then","modal","clearSelection","result","events","add","Event","start","end","id","guid","text","eventDeleteHandling","onEventClick","e","console","log","data","update","onBeforeCellRender","cell","getDay","getHours","html","onEventEdited","componentDidMount","setState","startDate","moveDisabled","clickDisabled","resizeDisabled","deleteDisabled","backColor","render","config","day","component","control"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,iBAArC,QAA8D,oBAA9D;AACA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADO;AAIbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE;AADT,GAJO;AAObC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAPO,CAAf;;AAYA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAE/BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,QAAQ,EAAE,MAFD;AAGTC,MAAAA,kBAAkB,EAAE,KAHX;AAITC,MAAAA,yBAAyB,EAAE,SAJlB;AAKTC,MAAAA,mBAAmB,EAAEC,IAAI,IAAI;AAC3B,YAAIC,EAAE,GAAG,KAAKC,QAAd;AACApB,QAAAA,QAAQ,CAACqB,KAAT,CAAeC,MAAf,CAAsB,qBAAtB,EAA6C,SAA7C,EAAwDC,IAAxD,CAA6D,UAAUC,KAAV,EAAiB;AAC5EL,UAAAA,EAAE,CAACM,cAAH;;AACA,cAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;AAAE;AAAS;;AAC9BP,UAAAA,EAAE,CAACQ,MAAH,CAAUC,GAAV,CAAc,IAAI5B,QAAQ,CAAC6B,KAAb,CAAmB;AAC/BC,YAAAA,KAAK,EAAEZ,IAAI,CAACY,KADmB;AAE/BC,YAAAA,GAAG,EAAEb,IAAI,CAACa,GAFqB;AAG/BC,YAAAA,EAAE,EAAEhC,QAAQ,CAACiC,IAAT,EAH2B;AAI/BC,YAAAA,IAAI,EAAEV,KAAK,CAACE;AAJmB,WAAnB,CAAd;AAMD,SATD;AAUD,OAjBQ;AAkBTS,MAAAA,mBAAmB,EAAE,QAlBZ;AAmBTC,MAAAA,YAAY,EAAElB,IAAI,IAAI;AACpB,YAAIC,EAAE,GAAG,KAAKC,QAAd;AACApB,QAAAA,QAAQ,CAACqB,KAAT,CAAeC,MAAf,CAAsB,oBAAtB,EAA4CJ,IAAI,CAACmB,CAAL,CAAOH,IAAP,EAA5C,EAA2DX,IAA3D,CAAgE,UAAUC,KAAV,EAAiB;AAC/E,cAAI,CAACA,KAAK,CAACE,MAAX,EAAmB;AAAE;AAAS;;AAC9BY,UAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACAA,UAAAA,IAAI,CAACmB,CAAL,CAAOG,IAAP,CAAYN,IAAZ,GAAmBV,KAAK,CAACE,MAAzB;AACAP,UAAAA,EAAE,CAACQ,MAAH,CAAUc,MAAV,CAAiBvB,IAAI,CAACmB,CAAtB;AACD,SALD;AAMD,OA3BQ;AA4BTK,MAAAA,kBAAkB,EAAExB,IAAI,IAAI;AAC1B,YAAIA,IAAI,CAACyB,IAAL,CAAUb,KAAV,CAAgBc,MAAhB,OAA6B,EAA7B,IAAmC1B,IAAI,CAACyB,IAAL,CAAUb,KAAV,CAAgBe,QAAhB,KAA6B,CAApE,EAAuE;AACrE3B,UAAAA,IAAI,CAACyB,IAAL,CAAUG,IAAV,GAAiB,gBAAjB;AACD;AACF,OAhCQ;AAiCTC,MAAAA,aAAa,EAAC7B,IAAI,IAAE;AAClBoB,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBrB,IAAzB;AACD;AAnCQ,KAAb;AAuCD;;AAED8B,EAAAA,iBAAiB,GAAG;AAElB;AACA,SAAKC,QAAL,CAAc;AACZC,MAAAA,SAAS,EAAE,YADC;AAGVvB,MAAAA,MAAM,EAAE,CACN;AACEK,QAAAA,EAAE,EAAE,CADN;AAEEE,QAAAA,IAAI,EAAE,SAFR;AAGEJ,QAAAA,KAAK,EAAE,qBAHT;AAIEC,QAAAA,GAAG,EAAE,qBAJP;AAKEoB,QAAAA,YAAY,EAAE,IALhB;AAMEC,QAAAA,aAAa,EAAE,IANjB;AAOEC,QAAAA,cAAc,EAAE,IAPlB;AAQEC,QAAAA,cAAc,EAAE;AARlB,OADM,EAWN;AACEtB,QAAAA,EAAE,EAAE,CADN;AAEEE,QAAAA,IAAI,EAAE,SAFR;AAGEJ,QAAAA,KAAK,EAAE,qBAHT;AAIEC,QAAAA,GAAG,EAAE,qBAJP;AAKEwB,QAAAA,SAAS,EAAE;AALb,OAXM,EAkBN;AACEvB,QAAAA,EAAE,EAAE,CADN;AAEEE,QAAAA,IAAI,EAAE,SAFR;AAGEJ,QAAAA,KAAK,EAAE,qBAHT;AAIEC,QAAAA,GAAG,EAAE,qBAJP;AAKEwB,QAAAA,SAAS,EAAE;AALb,OAlBM;AAHE,KAAd;AA+BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,EAAE,GAAGC;AAAL,QAAgB,KAAK5C,KAAzB;AACA,wBACE;AAAK,MAAA,KAAK,EAAEV,MAAM,CAACC,IAAnB;AAAA,mCACG;AAAK,QAAA,KAAK,EAAED,MAAM,CAACG,IAAnB;AAAA,+BACC,QAAC,iBAAD;AACE,UAAA,UAAU,EAAE,MADd;AAEE,UAAA,UAAU,EAAE,CAFd;AAGE,UAAA,UAAU,EAAE,CAHd;AAIE,UAAA,mBAAmB,EAAGY,IAAI,IAAI;AAC5B,iBAAK+B,QAAL,CAAc;AACZC,cAAAA,SAAS,EAAEhC,IAAI,CAACwC;AADJ,aAAd;AAGD;AARH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADH,eAaE;AAAK,QAAA,KAAK,EAAEvD,MAAM,CAACK,IAAnB;AAAA,+BACE,QAAC,gBAAD,OACMiD,MADN;AAEE,UAAA,GAAG,EAAEE,SAAS,IAAI;AAChB,iBAAKvC,QAAL,GAAgBuC,SAAS,IAAIA,SAAS,CAACC,OAAvC;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eAsBE;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEtB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKnB,QAAL,GAAgB,KAAKA,QAArB,GAAgC,EAAxD;AAA6D,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AA7G8B;;AAgHjC,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { DayPilot, DayPilotCalendar, DayPilotNavigator } from \"daypilot-pro-react\";\r\nimport \"./CalendarStyles.css\";\r\n\r\nconst styles = {\r\n  wrap: {\r\n    display: \"flex\"\r\n  },\r\n  left: {\r\n    marginRight: \"10px\"\r\n  },\r\n  main: {\r\n    flexGrow: \"1\"\r\n  }\r\n};\r\n\r\nclass Calendar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n        viewType: \"Week\",\r\n        durationBarVisible: false,\r\n        timeRangeSelectedHandling: \"Enabled\",\r\n        onTimeRangeSelected: args => {\r\n          let dp = this.calendar;\r\n          DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\r\n            dp.clearSelection();\r\n            if (!modal.result) { return; }\r\n            dp.events.add(new DayPilot.Event({\r\n              start: args.start,\r\n              end: args.end,\r\n              id: DayPilot.guid(),\r\n              text: modal.result\r\n            }));\r\n          });\r\n        },\r\n        eventDeleteHandling: \"Update\",\r\n        onEventClick: args => {\r\n          let dp = this.calendar;\r\n          DayPilot.Modal.prompt(\"Update event text:\", args.e.text()).then(function (modal) {\r\n            if (!modal.result) { return; }\r\n            console.log(args);\r\n            args.e.data.text = modal.result;\r\n            dp.events.update(args.e);\r\n          });\r\n        },\r\n        onBeforeCellRender: args => {\r\n          if (args.cell.start.getDay() === 14 && args.cell.start.getHours() > 9) {\r\n            args.cell.html = \"<h6>ejhik</h6>\"\r\n          }\r\n        },\r\n        onEventEdited:args=>{\r\n          console.log(\"event edit\",args);\r\n        }\r\n      \r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n   \r\n    // load event data\r\n    this.setState({\r\n      startDate: \"2021-09-15\",\r\n     \r\n        events: [\r\n          {\r\n            id: 1,\r\n            text: \"Event 1\",\r\n            start: \"2021-09-13T10:30:00\",\r\n            end: \"2021-09-13T13:00:00\",\r\n            moveDisabled :true,\r\n            clickDisabled :true,\r\n            resizeDisabled :true,\r\n            deleteDisabled :true,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: \"Event 2\",\r\n            start: \"2021-09-14T09:30:00\",\r\n            end: \"2021-09-14T11:30:00\",\r\n            backColor: \"#38761d\"\r\n          },\r\n          {\r\n            id: 2,\r\n            text: \"Event 3\",\r\n            start: \"2021-09-14T12:00:00\",\r\n            end: \"2021-09-14T15:00:00\",\r\n            backColor: \"#cc4125\"\r\n          },\r\n        ]\r\n     \r\n    });\r\n  }\r\n\r\n  render() {\r\n    var { ...config } = this.state;\r\n    return (\r\n      <div style={styles.wrap}>\r\n        =<div style={styles.left}>\r\n          <DayPilotNavigator\r\n            selectMode={\"week\"}\r\n            showMonths={3}\r\n            skipMonths={3}\r\n            onTimeRangeSelected={ args => {\r\n              this.setState({\r\n                startDate: args.day\r\n              });\r\n            }}\r\n          />\r\n        </div> \r\n        <div style={styles.main}>\r\n          <DayPilotCalendar\r\n            {...config}\r\n            ref={component => {\r\n              this.calendar = component && component.control;\r\n            }}\r\n\r\n          />\r\n        </div>\r\n        <button onClick={() => { console.log(\"calender\", this.calendar ? this.calendar : \"\") }}>calender</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}