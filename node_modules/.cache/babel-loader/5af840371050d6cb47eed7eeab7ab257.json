{"ast":null,"code":"import { Workbook } from '@syncfusion/ej2-excel-export';\nimport { extend } from '@syncfusion/ej2-base';\n/**\r\n * Excel Export Module\r\n */\n\nvar ExcelExport =\n/** @class */\nfunction () {\n  function ExcelExport(parent) {\n    this.parent = parent;\n  }\n\n  ExcelExport.prototype.initializeExcelExport = function (excelExportOptions) {\n    var _this = this;\n\n    var exportFields = excelExportOptions.fields || Object.keys(this.parent.eventFields).map(function (field) {\n      return _this.parent.eventFields[field];\n    });\n    var exportName = excelExportOptions.fileName || 'Schedule';\n    var exportType = excelExportOptions.exportType || 'xlsx';\n    var isIncludeOccurrences = excelExportOptions.includeOccurrences || false;\n    var eventCollection;\n\n    if (excelExportOptions.customData) {\n      eventCollection = !isIncludeOccurrences ? excelExportOptions.customData : this.parent.eventBase.getProcessedEvents(excelExportOptions.customData);\n    } else {\n      eventCollection = !isIncludeOccurrences ? this.parent.eventsData : this.parent.eventsProcessed;\n    }\n\n    this.processWorkbook(exportFields, exportName, exportType, eventCollection);\n  };\n\n  ExcelExport.prototype.processWorkbook = function (fields, name, type, eventCollection) {\n    var _this = this;\n\n    var columns = [];\n    var rows = [];\n    var columnHeader = [];\n    fields.forEach(function (field, i) {\n      return columns.push({\n        index: i + 1,\n        width: field === 'Id' ? 20 : 150\n      });\n    });\n    var style = {\n      fontSize: 12,\n      borders: {\n        color: '#E0E0E0'\n      },\n      bold: true\n    };\n    fields.forEach(function (field, i) {\n      return columnHeader.push({\n        index: i + 1,\n        value: field,\n        style: style\n      });\n    });\n    rows.push({\n      index: 1,\n      cells: columnHeader\n    });\n    var i = 2;\n\n    var _loop_1 = function (event_1) {\n      var columnData = [];\n      fields.forEach(function (field, n) {\n        var columnRule = {\n          index: n + 1,\n          value: event_1[field] || ''\n        };\n\n        if (field === _this.parent.eventFields.startTime || field === _this.parent.eventFields.endTime) {\n          var styleRule = {\n            fontSize: 12,\n            numberFormat: 'm/d/yyyy h:mm AM/PM'\n          };\n          columnRule = extend({}, columnRule, {\n            style: styleRule\n          }, true);\n        }\n\n        columnData.push(columnRule);\n      });\n      rows.push({\n        index: i,\n        cells: columnData\n      });\n      i++;\n    };\n\n    for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\n      var event_1 = eventCollection_1[_i];\n\n      _loop_1(event_1);\n    }\n\n    var workSheet = [{\n      columns: columns,\n      rows: rows\n    }];\n    var book = new Workbook({\n      worksheets: workSheet\n    }, type, this.parent.locale);\n    book.save(name + '.' + type);\n  };\n\n  ExcelExport.prototype.getModuleName = function () {\n    return 'excelExport';\n  };\n\n  ExcelExport.prototype.destroy = function () {\n    this.parent = null;\n  };\n\n  return ExcelExport;\n}();\n\nexport { ExcelExport };","map":{"version":3,"sources":["C:/Users/User/volunteers/node_modules/@syncfusion/ej2-schedule/src/schedule/exports/excel-export.js"],"names":["Workbook","extend","ExcelExport","parent","prototype","initializeExcelExport","excelExportOptions","_this","exportFields","fields","Object","keys","eventFields","map","field","exportName","fileName","exportType","isIncludeOccurrences","includeOccurrences","eventCollection","customData","eventBase","getProcessedEvents","eventsData","eventsProcessed","processWorkbook","name","type","columns","rows","columnHeader","forEach","i","push","index","width","style","fontSize","borders","color","bold","value","cells","_loop_1","event_1","columnData","n","columnRule","startTime","endTime","styleRule","numberFormat","_i","eventCollection_1","length","workSheet","book","worksheets","locale","save","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { Workbook } from '@syncfusion/ej2-excel-export';\r\nimport { extend } from '@syncfusion/ej2-base';\r\n/**\r\n * Excel Export Module\r\n */\r\nvar ExcelExport = /** @class */ (function () {\r\n    function ExcelExport(parent) {\r\n        this.parent = parent;\r\n    }\r\n    ExcelExport.prototype.initializeExcelExport = function (excelExportOptions) {\r\n        var _this = this;\r\n        var exportFields = excelExportOptions.fields || Object.keys(this.parent.eventFields).map(function (field) {\r\n            return _this.parent.eventFields[field];\r\n        });\r\n        var exportName = excelExportOptions.fileName || 'Schedule';\r\n        var exportType = excelExportOptions.exportType || 'xlsx';\r\n        var isIncludeOccurrences = excelExportOptions.includeOccurrences || false;\r\n        var eventCollection;\r\n        if (excelExportOptions.customData) {\r\n            eventCollection = !isIncludeOccurrences ? excelExportOptions.customData :\r\n                this.parent.eventBase.getProcessedEvents(excelExportOptions.customData);\r\n        }\r\n        else {\r\n            eventCollection = (!isIncludeOccurrences ? this.parent.eventsData : this.parent.eventsProcessed);\r\n        }\r\n        this.processWorkbook(exportFields, exportName, exportType, eventCollection);\r\n    };\r\n    ExcelExport.prototype.processWorkbook = function (fields, name, type, eventCollection) {\r\n        var _this = this;\r\n        var columns = [];\r\n        var rows = [];\r\n        var columnHeader = [];\r\n        fields.forEach(function (field, i) { return columns.push({ index: i + 1, width: (field === 'Id' ? 20 : 150) }); });\r\n        var style = { fontSize: 12, borders: { color: '#E0E0E0' }, bold: true };\r\n        fields.forEach(function (field, i) { return columnHeader.push({ index: i + 1, value: field, style: style }); });\r\n        rows.push({ index: 1, cells: columnHeader });\r\n        var i = 2;\r\n        var _loop_1 = function (event_1) {\r\n            var columnData = [];\r\n            fields.forEach(function (field, n) {\r\n                var columnRule = { index: n + 1, value: event_1[field] || '' };\r\n                if (field === _this.parent.eventFields.startTime || field === _this.parent.eventFields.endTime) {\r\n                    var styleRule = { fontSize: 12, numberFormat: 'm/d/yyyy h:mm AM/PM' };\r\n                    columnRule = extend({}, columnRule, { style: styleRule }, true);\r\n                }\r\n                columnData.push(columnRule);\r\n            });\r\n            rows.push({ index: i, cells: columnData });\r\n            i++;\r\n        };\r\n        for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\r\n            var event_1 = eventCollection_1[_i];\r\n            _loop_1(event_1);\r\n        }\r\n        var workSheet = [{ columns: columns, rows: rows }];\r\n        var book = new Workbook({ worksheets: workSheet }, type, this.parent.locale);\r\n        book.save(name + '.' + type);\r\n    };\r\n    ExcelExport.prototype.getModuleName = function () {\r\n        return 'excelExport';\r\n    };\r\n    ExcelExport.prototype.destroy = function () {\r\n        this.parent = null;\r\n    };\r\n    return ExcelExport;\r\n}());\r\nexport { ExcelExport };\r\n"]},"metadata":{},"sourceType":"module"}