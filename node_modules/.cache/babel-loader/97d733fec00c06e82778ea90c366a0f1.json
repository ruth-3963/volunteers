{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\login\\\\SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useHistory } from 'react-router-dom';\nimport './login.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport serverURL from '../serverURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = props => {\n  _s();\n\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(false);\n  const [listOfGroups, setListOfGroups] = useState(null);\n  const [group, setGroup] = useState();\n  const [events, setEvents] = useState([]);\n  const list = useRef();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      email: '',\n      password: '',\n      group: '',\n      emailValid: ''\n    },\n    onSubmit: async values => {\n      const email = values.email;\n\n      if (email === \"\") {\n        formik.values.emailValid = \"please type email\";\n      } else {\n        formik.values.emailValid = \"\";\n        const password = values.password; //get the group for this user\n\n        const result = await axios.get(\"\" + serverURL + \"api/User\", {\n          params: {\n            email: email,\n            password: password\n          }\n        });\n        console.log(result); // if (result.data.err) {\n        //     history.push({ pathname: '/error', state: { status: result.data.status } });\n        //     return;\n        // }\n\n        if (result.data) {\n          let user = result.data;\n\n          if (user.email && user.password) {\n            //paste hear\n            user = JSON.stringify(user); ////save the user in the storage\n            //go to choose group\n\n            const groups = await axios.get(\"\" + serverURL + \"GetByManager\", {\n              params: {\n                id: result.data.id\n              }\n            });\n            setListOfGroups(groups.data);\n            setIsLogin(true);\n          }\n\n          if (user.email && !user.password) {\n            user.password = password;\n            history.push({\n              pathname: \"/signup\",\n              state: user\n            });\n          }\n        } else alert(\"your email or password is incorrect\");\n      }\n    }\n  });\n\n  const submitAllValue = async () => {\n    const formikGroup = formik.values.group;\n\n    if (formikGroup === \"create new group\" || !listOfGroups) {\n      history.push({\n        pathname: \"/createGroup\",\n        state: {\n          email: formik.values.email\n        }\n      });\n    } else {\n      const index = formikGroup ? listOfGroups.findIndex(g => g.name === formikGroup) : 0;\n      const group = listOfGroups[index];\n      const result = await axios.get(\"\" + serverURL + \"api/Group\", {\n        params: {\n          id: group.id\n        }\n      });\n      setGroup(result.data);\n      setEvents(JSON.parse(result.data.events));\n      history.push({\n        pathname: \"schedule\",\n        state: {\n          group: result.data,\n          events: result.data.events\n        }\n      }); //history.push({pathname:\"/group\",state:{group:listOfGroups[index]}});\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          onClick: () => history.push(\"/\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            className: \"form-control\",\n            onChange: formik.handleChange,\n            value: formik.values.email,\n            disabled: isLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emailValid\",\n            className: \"validMassage\",\n            children: formik.values.emailValid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            children: \" (forget password)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            className: \"form-control\",\n            onChange: formik.handleChange,\n            value: formik.values.password,\n            disabled: isLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), !isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"outline-primary\",\n              block: true,\n              children: \"Continue...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true) : \"\", isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"select group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              id: \"group\",\n              name: \"group\",\n              value: formik.values.group,\n              onChange: formik.handleChange,\n              children: [listOfGroups.map((item, step) => /*#__PURE__*/_jsxDEV(\"option\", {\n                title: \"manager : \" + item.mName + \"(\" + item.mEmail + \")\",\n                children: [item.name, \" \"]\n              }, step, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"create new group\"\n              }, listOfGroups ? listOfGroups.length : 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 38\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            block: true,\n            onClick: () => submitAllValue(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"New in courseries - \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"1iyPMWlX9PDxE2eySKViXeS1ELI=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/login/SignIn.jsx"],"names":["Link","useHistory","Button","Form","useFormik","axios","React","useCallback","useEffect","useRef","useState","serverURL","SignIn","props","history","isLogin","setIsLogin","listOfGroups","setListOfGroups","group","setGroup","events","setEvents","list","formik","enableReinitialize","initialValues","email","password","emailValid","onSubmit","values","result","get","params","console","log","data","user","JSON","stringify","groups","id","push","pathname","state","alert","submitAllValue","formikGroup","index","findIndex","g","name","parse","handleSubmit","handleChange","map","item","step","mName","mEmail","length"],"mappings":"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","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\r\nimport './login.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport serverURL from '../serverURL';\r\n\r\nconst SignIn = (props) => {\r\n    const history = useHistory();\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [listOfGroups, setListOfGroups] = useState(null);\r\n    const [group, setGroup] = useState();\r\n    const [events, setEvents] = useState([]);\r\n    const list = useRef();\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            group: '',\r\n            emailValid: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            const email = values.email\r\n            if (email === \"\") {\r\n                formik.values.emailValid = \"please type email\";\r\n            }\r\n            else {\r\n\r\n                formik.values.emailValid = \"\";\r\n                const password = values.password;\r\n                //get the group for this user\r\n                const result = await axios.get(\"\" + serverURL + \"api/User\", {\r\n                    params: {\r\n                        email: email,\r\n                        password: password\r\n                    }\r\n                });\r\n\r\n\r\n                console.log(result);\r\n                // if (result.data.err) {\r\n                //     history.push({ pathname: '/error', state: { status: result.data.status } });\r\n                //     return;\r\n                // }\r\n\r\n                if (result.data) {\r\n                    let user = result.data;\r\n                    if (user.email && user.password) {\r\n                        //paste hear\r\n                        user = JSON.stringify(user);\r\n                        ////save the user in the storage\r\n                        //go to choose group\r\n                        const groups = await axios.get(\"\" + serverURL + \"GetByManager\", {\r\n                            params: {\r\n                                id: result.data.id,\r\n                            }\r\n                        });\r\n                        setListOfGroups(groups.data);\r\n                        setIsLogin(true);\r\n                    }\r\n                    if (user.email && !user.password) {\r\n                        user.password = password;\r\n                        history.push({ pathname: \"/signup\", state: user });\r\n\r\n                    }\r\n                }\r\n                else alert(\"your email or password is incorrect\");\r\n            }\r\n        },\r\n    });\r\n\r\n    const submitAllValue = async() => {\r\n        const formikGroup = formik.values.group;\r\n        if (formikGroup === \"create new group\" || !listOfGroups) {\r\n            history.push({ pathname: \"/createGroup\", state: { email: formik.values.email } });\r\n        }\r\n        else {\r\n            const index = formikGroup ? listOfGroups.findIndex(g => g.name === formikGroup) : 0;\r\n            const group = listOfGroups[index];\r\n            const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                params: {\r\n                    id: group.id,\r\n                }\r\n            });\r\n            setGroup(result.data);\r\n            setEvents(JSON.parse(result.data.events));\r\n            history.push({ pathname: \"schedule\", state: { group:result.data,events:result.data.events } });\r\n            //history.push({pathname:\"/group\",state:{group:listOfGroups[index]}});\r\n        };\r\n    }\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => history.push(\"/\")} >\r\n                        <span aria-hidden=\"true\" >&times;</span>\r\n                    </button><br />\r\n                    <h3>Sign In</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.email} disabled={isLogin} />\r\n                        <span id=\"emailValid\" className=\"validMassage\">{formik.values.emailValid}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label><Button variant=\"link\" > (forget password)</Button>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.password} disabled={isLogin} />\r\n                    </div>\r\n                    {!isLogin ? <><br /><div className=\"form-group\">\r\n                        <Button type=\"submit\" variant=\"outline-primary\" block>Continue...</Button>\r\n                    </div></> : \"\"}\r\n                    {isLogin ?\r\n                        <><Form.Group >\r\n                            <Form.Label>select group</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"group\" name=\"group\" value={formik.values.group} onChange={formik.handleChange}>\r\n                                {listOfGroups.map((item, step) =>\r\n                                    <option key={step} title={\"manager : \" + item.mName + \"(\" + item.mEmail + \")\"}>\r\n                                        {item.name} </option>\r\n                                )}\r\n                                <option key={listOfGroups ? listOfGroups.length : 0}>create new group</option>\r\n                            </Form.Control>\r\n                        </Form.Group><br /> <Button variant=\"primary\" block onClick={() => submitAllValue()}>Submit</Button></> : \"\"}\r\n                </form>\r\n\r\n            </div><br />\r\n            <div className=\"auth-inner\">\r\n                <h5>New in courseries - <Link to=\"/\"> Create Account</Link></h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}