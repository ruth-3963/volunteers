{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\scheduler\\\\editScheduler.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { cloneElement, useEffect, useRef, useState } from 'react';\nimport axios from \"axios\";\nimport serverURL from \"../serverURL\";\nimport './CalendarStyles.css';\nimport Button from \"react-bootstrap/Button\";\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditScheduler = () => {\n  _s();\n\n  const location = useLocation();\n  const calendar = useRef(); //const [events, setEvents] = useState([]);\n\n  const [group, setGroup] = useState(location.state.group);\n  const history = useHistory();\n\n  const sendData = async () => {\n    const events = calendar.current.eventsData;\n    const result = await axios.put(\"\" + serverURL + \"api/Event\", {\n      events: events,\n      group: group\n    });\n    console.log(result);\n    setGroup({ ...group,\n      ['events']: events\n    }); //calendar.current.eventsData = [];\n\n    calendar.current.eventsData.forEach(event => {\n      calendar.current.deleteEvent(event.Id);\n    });\n    history.push({\n      pathname: \"/schedule\",\n      state: {\n        events: group.events,\n        group: group\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonComponent, {\n      onClick: () => sendData(),\n      variant: \"link\",\n      children: \"save schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(ScheduleComponent, {\n      ref: calendar,\n      width: \"100%\",\n      height: \"550px\",\n      eventSettings: {\n        DataManager: JSON.stringify(group.events)\n      },\n      children: /*#__PURE__*/_jsxDEV(Inject, {\n        services: [Day, Week, WorkWeek, Month]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(EditScheduler, \"TGDnmGIOKM/Pqa/1wJ/+zhXHiJ8=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = EditScheduler;\nexport default EditScheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditScheduler\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/scheduler/editScheduler.jsx"],"names":["React","cloneElement","useEffect","useRef","useState","axios","serverURL","Button","ButtonComponent","ScheduleComponent","Day","Week","WorkWeek","Month","Inject","ViewsDirective","ViewDirective","DropDownListComponent","DateTimePickerComponent","useLocation","useHistory","EditScheduler","location","calendar","group","setGroup","state","history","sendData","events","current","eventsData","result","put","console","log","forEach","event","deleteEvent","Id","push","pathname","DataManager","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport serverURL from \"../serverURL\";\r\nimport './CalendarStyles.css'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\n\r\nconst EditScheduler = () => {\r\n    const location = useLocation();\r\n    const calendar = useRef();\r\n    //const [events, setEvents] = useState([]);\r\n    const [group ,setGroup ] =  useState(location.state.group);\r\n    const history = useHistory();\r\n    const sendData = async () => {\r\n        const events = calendar.current.eventsData;\r\n        const result = await axios.put(\"\" + serverURL + \"api/Event\", {\r\n            events: events,\r\n            group: group\r\n        });\r\n        console.log(result);\r\n        setGroup({ ...group, ['events'] : events  });\r\n       \r\n        //calendar.current.eventsData = [];\r\n        calendar.current.eventsData.forEach(event => {\r\n           calendar.current.deleteEvent(event.Id);\r\n       });\r\n        history.push({ pathname: \"/schedule\", state: { events: group.events, group: group } });\r\n\r\n    }\r\n   \r\n    return (<div><ButtonComponent onClick={() => sendData()} variant=\"link\" >save schedule</ButtonComponent>\r\n    <ScheduleComponent ref={calendar}width='100%' height='550px'eventSettings={{ DataManager: JSON.stringify(group.events) }}>\r\n        <Inject services={[Day, Week, WorkWeek, Month]} />\r\n    </ScheduleComponent></div>);\r\n\r\n}\r\nexport default EditScheduler;"]},"metadata":{},"sourceType":"module"}