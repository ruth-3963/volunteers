{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\scheduler\\\\calendarFunc.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { DayPilot, DayPilotCalendar, DayPilotNavigator } from \"daypilot-pro-react\";\nimport \"./CalendarStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  wrap: {\n    display: \"flex\"\n  },\n  left: {\n    marginRight: \"10px\"\n  },\n  main: {\n    flexGrow: \"1\"\n  }\n};\n\nconst Calendar = () => {\n  _s();\n\n  const [style, setStyle] = useState({\n    viewType: \"Week\",\n    durationBarVisible: false,\n    timeRangeSelectedHandling: \"Enabled\",\n    onTimeRangeSelected: args => {\n      let dp = this.calendar;\n      DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\n        dp.clearSelection();\n\n        if (!modal.result) {\n          return;\n        }\n\n        dp.events.add(new DayPilot.Event({\n          start: args.start,\n          end: args.end,\n          id: DayPilot.guid(),\n          text: modal.result\n        }));\n      });\n    },\n    eventDeleteHandling: \"Update\",\n    onEventClick: args => {\n      let dp = this.calendar;\n      DayPilot.Modal.prompt(\"Update event text:\", args.e.text()).then(function (modal) {\n        if (!modal.result) {\n          return;\n        }\n\n        console.log(args);\n        args.e.data.text = modal.result;\n        dp.events.update(args.e);\n      });\n    },\n    onBeforeCellRender: args => {// if (args.cell.start.getDay() === 14 && args.cell.start.getHours() > 9) {\n      // }\n    },\n    onEventEdited: args => {\n      console.log(\"event edit\", args);\n    }\n  });\n  const [events, setEvents] = useState([]);\n  const [startDate, setStartDate] = useState('2021-09-10');\n  const calendar = useRef(null);\n  useEffect(() => {\n    setEvents([{\n      id: 1,\n      text: \"Event 1\",\n      start: \"2021-02-17T10:30:00\",\n      end: \"2021-02-17T13:00:00\",\n      moveDisabled: true,\n      clickDisabled: true,\n      resizeDisabled: true,\n      deleteDisabled: true\n    }, {\n      id: 2,\n      text: \"Event 2\",\n      start: \"2021-09-14T09:30:00\",\n      end: \"2021-09-14T11:30:00\",\n      backColor: \"#38761d\"\n    }, {\n      id: 2,\n      text: \"Event 3\",\n      start: \"2021-09-14T12:00:00\",\n      end: \"2021-09-14T15:00:00\",\n      backColor: \"#cc4125\"\n    }]);\n    setStartDate('2021-09-10');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.wrap,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.left,\n      children: /*#__PURE__*/_jsxDEV(DayPilotNavigator, {\n        selectMode: \"week\",\n        showMonths: 3,\n        skipMonths: 3,\n        onTimeRangeSelected: args => {\n          setStartDate(args.day);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.main,\n      children: /*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...style,\n        ...events,\n        ...startDate,\n        ref: component => {\n          calendar.current = component && component.control;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(\"calender\", this.calendar ? this.calendar : \"\");\n      },\n      children: \"calender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"nB8tcuPqu5uiPys3WpVaZA0NEIY=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/scheduler/calendarFunc.jsx"],"names":["React","useEffect","useRef","useState","DayPilot","DayPilotCalendar","DayPilotNavigator","styles","wrap","display","left","marginRight","main","flexGrow","Calendar","style","setStyle","viewType","durationBarVisible","timeRangeSelectedHandling","onTimeRangeSelected","args","dp","calendar","Modal","prompt","then","modal","clearSelection","result","events","add","Event","start","end","id","guid","text","eventDeleteHandling","onEventClick","e","console","log","data","update","onBeforeCellRender","onEventEdited","setEvents","startDate","setStartDate","moveDisabled","clickDisabled","resizeDisabled","deleteDisabled","backColor","day","component","current","control"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,iBAArC,QAA8D,oBAA9D;AACA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP,GADK;AAIXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE;AADX,GAJK;AAOXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAPK,CAAf;;AAYA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAC/Bc,IAAAA,QAAQ,EAAE,MADqB;AAE/BC,IAAAA,kBAAkB,EAAE,KAFW;AAG/BC,IAAAA,yBAAyB,EAAE,SAHI;AAI/BC,IAAAA,mBAAmB,EAAEC,IAAI,IAAI;AACzB,UAAIC,EAAE,GAAG,KAAKC,QAAd;AACAnB,MAAAA,QAAQ,CAACoB,KAAT,CAAeC,MAAf,CAAsB,qBAAtB,EAA6C,SAA7C,EAAwDC,IAAxD,CAA6D,UAAUC,KAAV,EAAiB;AAC1EL,QAAAA,EAAE,CAACM,cAAH;;AACA,YAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;AAAE;AAAS;;AAC9BP,QAAAA,EAAE,CAACQ,MAAH,CAAUC,GAAV,CAAc,IAAI3B,QAAQ,CAAC4B,KAAb,CAAmB;AAC7BC,UAAAA,KAAK,EAAEZ,IAAI,CAACY,KADiB;AAE7BC,UAAAA,GAAG,EAAEb,IAAI,CAACa,GAFmB;AAG7BC,UAAAA,EAAE,EAAE/B,QAAQ,CAACgC,IAAT,EAHyB;AAI7BC,UAAAA,IAAI,EAAEV,KAAK,CAACE;AAJiB,SAAnB,CAAd;AAMH,OATD;AAUH,KAhB8B;AAiB/BS,IAAAA,mBAAmB,EAAE,QAjBU;AAkB/BC,IAAAA,YAAY,EAAElB,IAAI,IAAI;AAClB,UAAIC,EAAE,GAAG,KAAKC,QAAd;AACAnB,MAAAA,QAAQ,CAACoB,KAAT,CAAeC,MAAf,CAAsB,oBAAtB,EAA4CJ,IAAI,CAACmB,CAAL,CAAOH,IAAP,EAA5C,EAA2DX,IAA3D,CAAgE,UAAUC,KAAV,EAAiB;AAC7E,YAAI,CAACA,KAAK,CAACE,MAAX,EAAmB;AAAE;AAAS;;AAC9BY,QAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACAA,QAAAA,IAAI,CAACmB,CAAL,CAAOG,IAAP,CAAYN,IAAZ,GAAmBV,KAAK,CAACE,MAAzB;AACAP,QAAAA,EAAE,CAACQ,MAAH,CAAUc,MAAV,CAAiBvB,IAAI,CAACmB,CAAtB;AACH,OALD;AAMH,KA1B8B;AA2B/BK,IAAAA,kBAAkB,EAAExB,IAAI,IAAI,CACxB;AAEA;AACH,KA/B8B;AAgC/ByB,IAAAA,aAAa,EAAEzB,IAAI,IAAI;AACnBoB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BrB,IAA1B;AACH;AAlC8B,GAAD,CAAlC;AAoCA,QAAM,CAACS,MAAD,EAASiB,SAAT,IAAsB5C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6C,SAAD,EAAYC,YAAZ,IAA4B9C,QAAQ,CAAC,YAAD,CAA1C;AACA,QAAMoB,QAAQ,GAAGrB,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ8C,IAAAA,SAAS,CAAC,CAAC;AACPZ,MAAAA,EAAE,EAAE,CADG;AAEPE,MAAAA,IAAI,EAAE,SAFC;AAGPJ,MAAAA,KAAK,EAAE,qBAHA;AAIPC,MAAAA,GAAG,EAAE,qBAJE;AAKPgB,MAAAA,YAAY,EAAE,IALP;AAMPC,MAAAA,aAAa,EAAE,IANR;AAOPC,MAAAA,cAAc,EAAE,IAPT;AAQPC,MAAAA,cAAc,EAAE;AART,KAAD,EAUV;AACIlB,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE,SAFV;AAGIJ,MAAAA,KAAK,EAAE,qBAHX;AAIIC,MAAAA,GAAG,EAAE,qBAJT;AAKIoB,MAAAA,SAAS,EAAE;AALf,KAVU,EAiBV;AACInB,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE,SAFV;AAGIJ,MAAAA,KAAK,EAAE,qBAHX;AAIIC,MAAAA,GAAG,EAAE,qBAJT;AAKIoB,MAAAA,SAAS,EAAE;AALf,KAjBU,CAAD,CAAT;AAwBAL,IAAAA,YAAY,CAAC,YAAD,CAAZ;AACH,GA1BQ,EA0BN,EA1BM,CAAT;AA2BA,sBACI;AAAK,IAAA,KAAK,EAAE1C,MAAM,CAACC,IAAnB;AAAA,4BACI;AAAK,MAAA,KAAK,EAAED,MAAM,CAACG,IAAnB;AAAA,6BACI,QAAC,iBAAD;AACI,QAAA,UAAU,EAAE,MADhB;AAEI,QAAA,UAAU,EAAE,CAFhB;AAGI,QAAA,UAAU,EAAE,CAHhB;AAII,QAAA,mBAAmB,EAAEW,IAAI,IAAI;AACzB4B,UAAAA,YAAY,CAAC5B,IAAI,CAACkC,GAAN,CAAZ;AACH;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAK,MAAA,KAAK,EAAEhD,MAAM,CAACK,IAAnB;AAAA,6BACI,QAAC,gBAAD,OACQG,KADR;AAAA,WAEQe,MAFR;AAAA,WAGQkB,SAHR;AAII,QAAA,GAAG,EAAEQ,SAAS,IAAI;AACdjC,UAAAA,QAAQ,CAACkC,OAAT,GAAmBD,SAAS,IAAIA,SAAS,CAACE,OAA1C;AACH;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAsBI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEjB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKnB,QAAL,GAAgB,KAAKA,QAArB,GAAgC,EAAxD;AAA6D,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA5FD;;GAAMT,Q;;KAAAA,Q;AA6FN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\r\nimport { DayPilot, DayPilotCalendar, DayPilotNavigator } from \"daypilot-pro-react\";\r\nimport \"./CalendarStyles.css\";\r\n\r\nconst styles = {\r\n    wrap: {\r\n        display: \"flex\"\r\n    },\r\n    left: {\r\n        marginRight: \"10px\"\r\n    },\r\n    main: {\r\n        flexGrow: \"1\"\r\n    }\r\n};\r\n\r\nconst Calendar = () => {\r\n    const [style, setStyle] = useState({\r\n        viewType: \"Week\",\r\n        durationBarVisible: false,\r\n        timeRangeSelectedHandling: \"Enabled\",\r\n        onTimeRangeSelected: args => {\r\n            let dp = this.calendar;\r\n            DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\r\n                dp.clearSelection();\r\n                if (!modal.result) { return; }\r\n                dp.events.add(new DayPilot.Event({\r\n                    start: args.start,\r\n                    end: args.end,\r\n                    id: DayPilot.guid(),\r\n                    text: modal.result\r\n                }));\r\n            });\r\n        },\r\n        eventDeleteHandling: \"Update\",\r\n        onEventClick: args => {\r\n            let dp = this.calendar;\r\n            DayPilot.Modal.prompt(\"Update event text:\", args.e.text()).then(function (modal) {\r\n                if (!modal.result) { return; }\r\n                console.log(args);\r\n                args.e.data.text = modal.result;\r\n                dp.events.update(args.e);\r\n            });\r\n        },\r\n        onBeforeCellRender: args => {\r\n            // if (args.cell.start.getDay() === 14 && args.cell.start.getHours() > 9) {\r\n                \r\n            // }\r\n        },\r\n        onEventEdited: args => {\r\n            console.log(\"event edit\", args);\r\n        }\r\n    });\r\n    const [events, setEvents] = useState([])\r\n    const [startDate, setStartDate] = useState('2021-09-10');\r\n    const calendar = useRef(null);\r\n    useEffect(() => {\r\n        setEvents([{\r\n            id: 1,\r\n            text: \"Event 1\",\r\n            start: \"2021-02-17T10:30:00\",\r\n            end: \"2021-02-17T13:00:00\",\r\n            moveDisabled: true,\r\n            clickDisabled: true,\r\n            resizeDisabled: true,\r\n            deleteDisabled: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: \"Event 2\",\r\n            start: \"2021-09-14T09:30:00\",\r\n            end: \"2021-09-14T11:30:00\",\r\n            backColor: \"#38761d\"\r\n        },\r\n        {\r\n            id: 2,\r\n            text: \"Event 3\",\r\n            start: \"2021-09-14T12:00:00\",\r\n            end: \"2021-09-14T15:00:00\",\r\n            backColor: \"#cc4125\"\r\n        }])\r\n        setStartDate('2021-09-10')\r\n    }, [])\r\n    return (\r\n        <div style={styles.wrap}>\r\n            <div style={styles.left}>\r\n                <DayPilotNavigator\r\n                    selectMode={\"week\"}\r\n                    showMonths={3}\r\n                    skipMonths={3}\r\n                    onTimeRangeSelected={args => {\r\n                        setStartDate(args.day)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={styles.main}>\r\n                <DayPilotCalendar\r\n                    {...style}\r\n                    {...events}\r\n                    {...startDate}\r\n                    ref={component => {\r\n                        calendar.current = component && component.control;\r\n                    }}\r\n\r\n                />\r\n            </div>\r\n            <button onClick={() => { console.log(\"calender\", this.calendar ? this.calendar : \"\") }}>calender</button>\r\n        </div>)\r\n}\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}