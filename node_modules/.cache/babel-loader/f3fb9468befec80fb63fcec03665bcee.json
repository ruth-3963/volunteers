{"ast":null,"code":"import dateutil from './dateutil';\nimport { DateTime } from 'luxon';\n\nvar DateWithZone =\n/** @class */\nfunction () {\n  function DateWithZone(date, tzid) {\n    this.date = date;\n    this.tzid = tzid;\n  }\n\n  Object.defineProperty(DateWithZone.prototype, \"isUTC\", {\n    get: function () {\n      return !this.tzid || this.tzid.toUpperCase() === 'UTC';\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DateWithZone.prototype.toString = function () {\n    var datestr = dateutil.timeToUntilString(this.date.getTime(), this.isUTC);\n\n    if (!this.isUTC) {\n      return \";TZID=\" + this.tzid + \":\" + datestr;\n    }\n\n    return \":\" + datestr;\n  };\n\n  DateWithZone.prototype.getTime = function () {\n    return this.date.getTime();\n  };\n\n  DateWithZone.prototype.rezonedDate = function () {\n    if (this.isUTC) {\n      return this.date;\n    }\n\n    try {\n      var datetime = DateTime.fromJSDate(this.date);\n      var rezoned = datetime.setZone(this.tzid, {\n        keepLocalTime: true\n      });\n      return rezoned.toJSDate();\n    } catch (e) {\n      if (e instanceof TypeError) {\n        console.error('Using TZID without Luxon available is unsupported. Returned times are in UTC, not the requested time zone');\n      }\n\n      return this.date;\n    }\n  };\n\n  return DateWithZone;\n}();\n\nexport { DateWithZone };","map":{"version":3,"sources":["../../../src/datewithzone.ts"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,YAArB;AACA,SAAS,QAAT,QAAyB,OAAzB;;AAEA,IAAA,YAAA;AAAA;AAAA,YAAA;AAIE,WAAA,YAAA,CAAa,IAAb,EAAyB,IAAzB,EAA6C;AAC3C,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;;AAED,EAAA,MAAA,CAAA,cAAA,CAAY,YAAA,CAAA,SAAZ,EAAY,OAAZ,EAAiB;SAAjB,YAAA;AACE,aAAO,CAAC,KAAK,IAAN,IAAc,KAAK,IAAL,CAAU,WAAV,OAA4B,KAAjD;AACD,KAFgB;oBAAA;;AAAA,GAAjB;;AAIO,EAAA,YAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACE,QAAM,OAAO,GAAG,QAAQ,CAAC,iBAAT,CAA2B,KAAK,IAAL,CAAU,OAAV,EAA3B,EAAgD,KAAK,KAArD,CAAhB;;AACA,QAAI,CAAC,KAAK,KAAV,EAAiB;AACf,aAAO,WAAS,KAAK,IAAd,GAAkB,GAAlB,GAAsB,OAA7B;AACD;;AAED,WAAO,MAAI,OAAX;AACD,GAPM;;AASA,EAAA,YAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,WAAO,KAAK,IAAL,CAAU,OAAV,EAAP;AACD,GAFM;;AAIA,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACE,QAAI,KAAK,KAAT,EAAgB;AACd,aAAO,KAAK,IAAZ;AACD;;AAED,QAAI;AACF,UAAM,QAAQ,GAAG,QAAQ,CACtB,UADc,CACH,KAAK,IADF,CAAjB;AAGA,UAAM,OAAO,GAAG,QAAQ,CAAC,OAAT,CAAiB,KAAK,IAAtB,EAA6B;AAAE,QAAA,aAAa,EAAE;AAAjB,OAA7B,CAAhB;AAEA,aAAO,OAAO,CAAC,QAAR,EAAP;AACD,KAPD,CAOE,OAAO,CAAP,EAAU;AACV,UAAI,CAAC,YAAY,SAAjB,EAA4B;AAC1B,QAAA,OAAO,CAAC,KAAR,CAAc,2GAAd;AACD;;AACD,aAAO,KAAK,IAAZ;AACD;AACF,GAlBM;;AAmBT,SAAA,YAAA;AAAC,CA7CD,EAAA","sourceRoot":"","sourcesContent":["import dateutil from './dateutil';\r\nimport { DateTime } from 'luxon';\r\nvar DateWithZone = /** @class */ (function () {\r\n    function DateWithZone(date, tzid) {\r\n        this.date = date;\r\n        this.tzid = tzid;\r\n    }\r\n    Object.defineProperty(DateWithZone.prototype, \"isUTC\", {\r\n        get: function () {\r\n            return !this.tzid || this.tzid.toUpperCase() === 'UTC';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DateWithZone.prototype.toString = function () {\r\n        var datestr = dateutil.timeToUntilString(this.date.getTime(), this.isUTC);\r\n        if (!this.isUTC) {\r\n            return \";TZID=\" + this.tzid + \":\" + datestr;\r\n        }\r\n        return \":\" + datestr;\r\n    };\r\n    DateWithZone.prototype.getTime = function () {\r\n        return this.date.getTime();\r\n    };\r\n    DateWithZone.prototype.rezonedDate = function () {\r\n        if (this.isUTC) {\r\n            return this.date;\r\n        }\r\n        try {\r\n            var datetime = DateTime\r\n                .fromJSDate(this.date);\r\n            var rezoned = datetime.setZone(this.tzid, { keepLocalTime: true });\r\n            return rezoned.toJSDate();\r\n        }\r\n        catch (e) {\r\n            if (e instanceof TypeError) {\r\n                console.error('Using TZID without Luxon available is unsupported. Returned times are in UTC, not the requested time zone');\r\n            }\r\n            return this.date;\r\n        }\r\n    };\r\n    return DateWithZone;\r\n}());\r\nexport { DateWithZone };\r\n//# sourceMappingURL=datewithzone.js.map"]},"metadata":{},"sourceType":"module"}