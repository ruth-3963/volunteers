{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\group\\\\create_group.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport serverURL from '../serverURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateGroup = () => {\n  _s();\n\n  const location = useLocation();\n  const [isCreate, setIsCreate] = useState(false);\n  const [group, setGroup] = useState(null);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      description: ''\n    },\n    onSubmit: async values => {\n      const result = await axios.post(\"\" + serverURL + \"api/Group\", {\n        email: location.state.email,\n        name: values.name,\n        description: values.description\n      });\n\n      if (result.data) {\n        setIsCreate(true);\n        setGroup(result.data);\n      } else {\n        alert(\"we dont succed to create group maybe yo have another group with the same name?\");\n      }\n    }\n  }); //hear i need have the mail of manager\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Group name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"enter group name\",\n            id: \"name\",\n            name: \"name\",\n            onChange: formik.handleChange,\n            value: formik.values.name,\n            disabled: isCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description on your group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            id: \"description\",\n            name: \"description\",\n            onChange: formik.handleChange,\n            value: formik.values.description,\n            disabled: isCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          block: true,\n          hidden: isCreate,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        block: true,\n        hidden: !isCreate,\n        onClick: () => history.push({\n          pathname: \"/addVolunteer\",\n          state: {\n            group: group\n          }\n        }),\n        children: \"add volunteers to your group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        block: true,\n        hidden: !isCreate,\n        children: \"edit schedule to your group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CreateGroup, \"4JdqpxAtNSTtPBRUBkhjm9U+uNg=\", false, function () {\n  return [useLocation, useHistory, useFormik];\n});\n\n_c = CreateGroup;\nexport default CreateGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/group/create_group.jsx"],"names":["axios","useFormik","React","useState","Button","Form","useHistory","useLocation","serverURL","CreateGroup","location","isCreate","setIsCreate","group","setGroup","history","formik","initialValues","name","description","onSubmit","values","result","post","email","state","data","alert","handleSubmit","handleChange","push","pathname"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport serverURL from '../serverURL';\r\nconst CreateGroup = () => {\r\n    const location = useLocation();\r\n    const [isCreate, setIsCreate] = useState(false);\r\n    const [group ,setGroup] = useState(null);\r\n    const history = useHistory();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            description: '',\r\n        },\r\n        onSubmit:async(values) => {\r\n            const result = await axios.post(\"\" + serverURL + \"api/Group\", {\r\n                email: location.state.email,\r\n                name: values.name,\r\n                description: values.description\r\n            })\r\n            if (result.data) {\r\n                setIsCreate(true);\r\n                setGroup(result.data);\r\n            }\r\n            else {\r\n                alert(\"we dont succed to create group maybe yo have another group with the same name?\");\r\n            }\r\n\r\n        },\r\n    });\r\n    //hear i need have the mail of manager\r\n    return (<div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n        <h3>Create group</h3>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Group name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"enter group name\" id=\"name\" name=\"name\"\r\n                    onChange={formik.handleChange} value={formik.values.name} disabled={isCreate} />\r\n               \r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Description on your group</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} id=\"description\" name=\"description\"\r\n                    onChange={formik.handleChange} value={formik.values.description} disabled={isCreate} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\" block hidden={isCreate}>Submit</Button>\r\n        </Form>\r\n        <Button variant=\"outline-primary\" block hidden={!isCreate}\r\n         onClick={()=>history.push({pathname:\"/addVolunteer\",state:{group:group}})}>\r\n            add volunteers to your group</Button>\r\n        <Button variant=\"outline-primary\" block hidden={!isCreate}>edit schedule to your group</Button>\r\n    </div></div >\r\n    )\r\n}\r\n\r\nexport default CreateGroup;\r\n\r\n"]},"metadata":{},"sourceType":"module"}