{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\volunteers\\\\src\\\\group\\\\addVolunteer.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useRef, useEffect } from 'react';\nimport Button from 'react-bootstrap/esm/Button';\nimport Form from 'react-bootstrap/Form';\nimport serverURL from '../serverURL';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst container = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-around\"\n};\n\nconst AddVolunteer = () => {\n  _s();\n\n  const [volunteers, setVolunteers] = useState([]);\n  const location = useLocation();\n  const history = useHistory();\n  const formRef = useRef();\n  const [group, setGroup] = useState();\n  useEffect(() => {\n    if (location.state && location.state.groups) setGroup(location.state.groups);\n  }, [location.state]);\n\n  const setStateOfVolunteers = (e, i) => {\n    if (e.target.id === \"email\") {} else {}\n  };\n\n  const EditSchedule = () => {\n    history.push({\n      pathname: \"/schedule\",\n      state: {\n        group: group,\n        edit: true\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    debugger;\n    e.preventDefault();\n    const arr = Array.prototype.slice.call(e.target.children[0].children);\n    const volunteers = [];\n    arr.map((chaild, index) => {\n      if (chaild.value) {\n        const email = chaild.value;\n        volunteers.push({\n          email: email\n        });\n      }\n    });\n    axios.post(\"\" + serverURL + \"AddUsers\", {\n      list: volunteers,\n      group: group\n    });\n    formRef.current.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Volunteers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [...Array(8)].map((e, i) => /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          block: true,\n          children: \"Add all and send email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddVolunteer, \"QFzHCP/9afL9yhBQaVXbx6HM6gs=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = AddVolunteer;\nexport default AddVolunteer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVolunteer\");","map":{"version":3,"sources":["C:/Users/User/volunteers/src/group/addVolunteer.jsx"],"names":["axios","React","useState","useRef","useEffect","Button","Form","serverURL","useLocation","useHistory","container","display","flexDirection","justifyContent","AddVolunteer","volunteers","setVolunteers","location","history","formRef","group","setGroup","state","groups","setStateOfVolunteers","e","i","target","id","EditSchedule","push","pathname","edit","handleSubmit","preventDefault","arr","Array","prototype","slice","call","children","map","chaild","index","value","email","post","list","current","reset"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useRef ,useEffect} from 'react';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport serverURL from '../serverURL';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nconst container = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n}\r\nconst AddVolunteer = () => {\r\n\r\n    const [volunteers, setVolunteers] = useState([]);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const formRef = useRef();\r\n    const [group, setGroup] = useState();\r\n    useEffect(() => {\r\n       if(location.state && location.state.groups)\r\n             setGroup(location.state.groups)   \r\n      },[location.state]);\r\n    const setStateOfVolunteers = (e, i) => {\r\n        if (e.target.id === \"email\") {\r\n\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    const EditSchedule = () => {\r\n        history.push({ pathname: \"/schedule\", state: { group: group, edit: true } });\r\n    }\r\n    const handleSubmit = (e) => {\r\n        debugger;\r\n        e.preventDefault();\r\n        const arr = Array.prototype.slice.call(e.target.children[0].children);\r\n        const volunteers = [];\r\n        arr.map((chaild, index) => {\r\n            if (chaild.value) {\r\n                const email = chaild.value;\r\n                volunteers.push({ email: email });\r\n            }\r\n        });\r\n        axios.post(\"\" + serverURL + \"AddUsers\", {\r\n            list: volunteers,\r\n            group: group\r\n        })\r\n        formRef.current.reset();\r\n    }\r\n    return (<div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <h3>Add Volunteers</h3><br />\r\n            <Form ref={formRef} onSubmit={(e) => handleSubmit(e)}>\r\n               \r\n                    <div  className=\"mb-3\">\r\n                       { [...Array(8)].map((e, i) => <Form.Control type=\"email\" placeholder=\"Enter email\" />)}\r\n                    </div>\r\n                    <Button type=\"submit\" block >Add all and send email</Button>\r\n               \r\n              \r\n            </Form>\r\n            {/* <form ref={formRef} onSubmit={(e) => handleSubmit(e)}> \r\n                <ul>\r\n                    {(() => {\r\n                        const inputs = [];\r\n                        for (let i = 0; i < 5; i++) {\r\n                            volunteers.push({ name: \"\", email: \"\" });\r\n                            inputs.push(<><li key={i} className=\"container\" style={container}>\r\n                                <input type=\"text\" placeholder=\"name\" id=\"name\" />\r\n                                <input type=\"email\" id=\"email\" placeholder=\"email\" />\r\n                                <label>send email</label><input type=\"checkbox\" id=\"sendEmail\"/>\r\n                            </li><br /></>);\r\n                        }\r\n                        return inputs;\r\n                    })()}\r\n                </ul>\r\n\r\n\r\n                <Button type=\"submit\" block>Add all</Button>\r\n                <Button block onClick={() => EditSchedule()}>Edit schedule</Button>\r\n                <Button block disabled={!group.events}\r\n                    onClick={() => {history.push({ pathname: \"/schedule\", state: { group: group, events: JSON.parse(group.events) } })}}>schedule</Button>\r\n            </form>>*/}</div></div>\r\n    );\r\n}\r\nexport default AddVolunteer;"]},"metadata":{},"sourceType":"module"}