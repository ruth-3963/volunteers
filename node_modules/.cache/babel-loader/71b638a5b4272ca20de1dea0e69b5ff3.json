{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\scheduler\\\\editScheduler.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { cloneElement, useEffect, useRef, useState } from 'react';\nimport axios from \"axios\";\nimport serverURL from \"../serverURL\";\nimport './CalendarStyles.css';\nimport Button from \"react-bootstrap/Button\";\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\nimport { DateTimePickerComponent, TimePicker } from '@syncfusion/ej2-react-calendars';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditScheduler = () => {\n  _s();\n\n  const location = useLocation();\n  const calendar = useRef(); //const [events, setEvents] = useState([]);\n\n  const [group, setGroup] = useState(location.state.group);\n  const history = useHistory();\n\n  const sendData = async () => {\n    const events = calendar.current.eventsData;\n    const result = await axios.put(\"\" + serverURL + \"api/Event\", {\n      events: events,\n      group: group\n    });\n    console.log(result);\n    setGroup({ ...group,\n      ['events']: events\n    }); //calendar.current.eventsData = [];\n\n    calendar.current.eventsData.forEach(event => {\n      calendar.current.deleteEvent(event.Id);\n    });\n    history.push({\n      pathname: \"/schedule\",\n      state: {\n        events: group.events,\n        group: group\n      }\n    });\n  };\n\n  const editorTemplate = props => {\n    return props !== undefined ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"custom-event-editor\",\n      style: {\n        width: '100%',\n        cellpadding: '5'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"e-textlabel\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title\",\n              className: \"e-field e-input\",\n              type: \"text\",\n              name: \"title\",\n              style: {\n                width: '100%'\n              },\n              disabled: true,\n              value: \"volunteer time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"e-textlabel\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(TimePicker, {\n              format: \"dd/MM/yy hh:mm a\",\n              id: \"StartTime\",\n              \"data-name\": \"StartTime\",\n              value: new Date(props.startTime || props.StartTime),\n              className: \"e-field\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"e-textlabel\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(DateTimePickerComponent, {\n              format: \"dd/MM/yy hh:mm a\",\n              id: \"EndTime\",\n              \"data-name\": \"EndTime\",\n              value: new Date(props.endTime || props.EndTime),\n              className: \"e-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 118\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonComponent, {\n      onClick: () => sendData(),\n      variant: \"link\",\n      children: \"save schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(ScheduleComponent, {\n      ref: calendar,\n      width: \"100%\",\n      height: \"550px\",\n      eventSettings: {\n        dataSource: JSON.parse(group.events)\n      },\n      editorTemplate: e => editorTemplate(e),\n      children: /*#__PURE__*/_jsxDEV(Inject, {\n        services: [Day, Week, WorkWeek, Month]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n\n_s(EditScheduler, \"TGDnmGIOKM/Pqa/1wJ/+zhXHiJ8=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = EditScheduler;\nexport default EditScheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditScheduler\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/scheduler/editScheduler.jsx"],"names":["React","cloneElement","useEffect","useRef","useState","axios","serverURL","Button","ButtonComponent","ScheduleComponent","Day","Week","WorkWeek","Month","Inject","ViewsDirective","ViewDirective","DropDownListComponent","DateTimePickerComponent","TimePicker","useLocation","useHistory","EditScheduler","location","calendar","group","setGroup","state","history","sendData","events","current","eventsData","result","put","console","log","forEach","event","deleteEvent","Id","push","pathname","editorTemplate","props","undefined","width","cellpadding","Date","startTime","StartTime","endTime","EndTime","dataSource","JSON","parse","e"],"mappings":"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","sourcesContent":["import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport serverURL from \"../serverURL\";\r\nimport './CalendarStyles.css'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent,TimePicker } from '@syncfusion/ej2-react-calendars';\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\n\r\nconst EditScheduler = () => {\r\n    const location = useLocation();\r\n    const calendar = useRef();\r\n    //const [events, setEvents] = useState([]);\r\n    const [group ,setGroup ] =  useState(location.state.group);\r\n    const history = useHistory();\r\n    const sendData = async () => {\r\n        const events = calendar.current.eventsData;\r\n        const result = await axios.put(\"\" + serverURL + \"api/Event\", {\r\n            events: events,\r\n            group: group\r\n        });\r\n        console.log(result);\r\n        setGroup({ ...group, ['events'] : events  });\r\n       \r\n        //calendar.current.eventsData = [];\r\n        calendar.current.eventsData.forEach(event => {\r\n           calendar.current.deleteEvent(event.Id);\r\n       });\r\n        history.push({ pathname: \"/schedule\", state: { events: group.events, group: group } });\r\n\r\n    }\r\n   const editorTemplate = (props) => {\r\n    return (props !== undefined ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n    <tr><td className=\"e-textlabel\">Title</td><td colSpan={4}>\r\n        <input id=\"title\" className=\"e-field e-input\" type=\"text\" name=\"title\" style={{ width: '100%' }} disabled={true}\r\n         value=\"volunteer time\"/>\r\n    </td></tr>\r\n    \r\n    <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n        <TimePicker format='dd/MM/yy hh:mm a' id=\"StartTime\" data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)} className=\"e-field\" disabled={true}></TimePicker>\r\n    </td></tr>\r\n    <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n        <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n    </td></tr>\r\n   </tbody></table> : <div></div>);\r\n   }\r\n    return (<div><ButtonComponent onClick={() => sendData()} variant=\"link\" >save schedule</ButtonComponent>\r\n    <ScheduleComponent ref={calendar}width='100%' height='550px'eventSettings={{ dataSource: JSON.parse(group.events) }}\r\n     editorTemplate={(e) => editorTemplate(e)}>\r\n        <Inject services={[Day, Week, WorkWeek, Month]} />\r\n    </ScheduleComponent></div>);\r\n\r\n}\r\nexport default EditScheduler;"]},"metadata":{},"sourceType":"module"}