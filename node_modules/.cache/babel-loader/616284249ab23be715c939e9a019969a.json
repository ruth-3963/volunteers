{"ast":null,"code":"import moment from 'moment';\nimport { appointments } from './appointments';\nconst currentDate = moment();\nlet date = currentDate.date();\n\nconst makeTodayAppointment = (startDate, endDate) => {\n  const days = moment(startDate).diff(endDate, 'days');\n  const nextStartDate = moment(startDate).year(currentDate.year()).month(currentDate.month()).date(date);\n  const nextEndDate = moment(endDate).year(currentDate.year()).month(currentDate.month()).date(date + days);\n  return {\n    startDate: nextStartDate.toDate(),\n    endDate: nextEndDate.toDate()\n  };\n};\n\nexport default _c2 = appointments.map(_c = ({\n  startDate,\n  endDate,\n  ...restArgs\n}) => {\n  const result = { ...makeTodayAppointment(startDate, endDate),\n    ...restArgs\n  };\n  date += 1;\n  if (date > 31) date = 1;\n  return result;\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$appointments.map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/demo-data/today-appointments.js"],"names":["moment","appointments","currentDate","date","makeTodayAppointment","startDate","endDate","days","diff","nextStartDate","year","month","nextEndDate","toDate","map","restArgs","result"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,WAAW,GAAGF,MAAM,EAA1B;AACA,IAAIG,IAAI,GAAGD,WAAW,CAACC,IAAZ,EAAX;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACnD,QAAMC,IAAI,GAAGP,MAAM,CAACK,SAAD,CAAN,CAAkBG,IAAlB,CAAuBF,OAAvB,EAAgC,MAAhC,CAAb;AACA,QAAMG,aAAa,GAAGT,MAAM,CAACK,SAAD,CAAN,CACnBK,IADmB,CACdR,WAAW,CAACQ,IAAZ,EADc,EAEnBC,KAFmB,CAEbT,WAAW,CAACS,KAAZ,EAFa,EAGnBR,IAHmB,CAGdA,IAHc,CAAtB;AAIA,QAAMS,WAAW,GAAGZ,MAAM,CAACM,OAAD,CAAN,CACjBI,IADiB,CACZR,WAAW,CAACQ,IAAZ,EADY,EAEjBC,KAFiB,CAEXT,WAAW,CAACS,KAAZ,EAFW,EAGjBR,IAHiB,CAGZA,IAAI,GAAGI,IAHK,CAApB;AAKA,SAAO;AACLF,IAAAA,SAAS,EAAEI,aAAa,CAACI,MAAd,EADN;AAELP,IAAAA,OAAO,EAAEM,WAAW,CAACC,MAAZ;AAFJ,GAAP;AAID,CAfD;;AAiBA,qBAAeZ,YAAY,CAACa,GAAb,MAAiB,CAAC;AAAET,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsB,KAAGS;AAAzB,CAAD,KAAyC;AACvE,QAAMC,MAAM,GAAG,EACb,GAAGZ,oBAAoB,CAACC,SAAD,EAAYC,OAAZ,CADV;AAEb,OAAGS;AAFU,GAAf;AAIAZ,EAAAA,IAAI,IAAI,CAAR;AACA,MAAIA,IAAI,GAAG,EAAX,EAAeA,IAAI,GAAG,CAAP;AACf,SAAOa,MAAP;AACD,CARc,CAAf","sourcesContent":["import moment from 'moment';\r\nimport { appointments } from './appointments'\r\n\r\nconst currentDate = moment();\r\nlet date = currentDate.date();\r\n\r\nconst makeTodayAppointment = (startDate, endDate) => {\r\n  const days = moment(startDate).diff(endDate, 'days');\r\n  const nextStartDate = moment(startDate)\r\n    .year(currentDate.year())\r\n    .month(currentDate.month())\r\n    .date(date);\r\n  const nextEndDate = moment(endDate)\r\n    .year(currentDate.year())\r\n    .month(currentDate.month())\r\n    .date(date + days);\r\n\r\n  return {\r\n    startDate: nextStartDate.toDate(),\r\n    endDate: nextEndDate.toDate(),\r\n  };\r\n};\r\n\r\nexport default appointments.map(({ startDate, endDate, ...restArgs }) => {\r\n  const result = {\r\n    ...makeTodayAppointment(startDate, endDate),\r\n    ...restArgs,\r\n  };\r\n  date += 1;\r\n  if (date > 31) date = 1;\r\n  return result;\r\n});\r\n"]},"metadata":{},"sourceType":"module"}