{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilani\\\\project\\\\volunteers\\\\src\\\\login\\\\SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useHistory } from 'react-router-dom';\nimport './login.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport serverUrl from '../serverURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = props => {\n  _s();\n\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(false);\n  const [listOfGroups, setListOfGroups] = useState();\n  const list = useRef();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      email: '',\n      password: '',\n      emailValid: ''\n    },\n    onSubmit: async values => {\n      const email = values.email;\n\n      if (email === \"\") {\n        formik.values.emailValid = \"please type email\";\n      } else {\n        formik.values.emailValid = \"\";\n        const password = values.password; //get the group for this user\n\n        const result = await axios.get(\"\" + serverUrl + \"api/User\", {\n          params: {\n            email: email,\n            password: password\n          }\n        });\n        console.log(result); // if (result.data.err) {\n        //     history.push({ pathname: '/error', state: { status: result.data.status } });\n        //     return;\n        // }\n\n        if (result.data) {\n          let user = result.data;\n\n          if (user.email && user.password) {\n            //paste hear\n            user = JSON.stringify(user); ////save the user in the storage\n            //go to choose group\n\n            const groups = await axios.get(\"\" + serverUrl + \"api/Group\", {\n              params: {\n                id: result.data.id\n              }\n            });\n            setListOfGroups(groups.data);\n            setIsLogin(true);\n          }\n\n          if (user.email && !user.password) {\n            user.password = password;\n            history.push({\n              pathname: \"/signup\",\n              state: user\n            });\n          }\n        } else alert(\"your email or password is incorrect\");\n      }\n    }\n  });\n  useEffect(() => {\n    if (isLogin) {\n      console.log(formik.values.email);\n      listOfGroups.map(g => {\n        /*#__PURE__*/\n        _jsxDEV(\"option\", {\n          children: \"111\"\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this);\n      });\n    }\n  }, [isLogin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          onClick: () => history.push(\"/\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            className: \"form-control\",\n            onChange: formik.handleChange,\n            value: formik.values.email,\n            disabled: isLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emailValid\",\n            className: \"validMassage\",\n            children: formik.values.emailValid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            children: \" (forget password)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            className: \"form-control\",\n            onChange: formik.handleChange,\n            value: formik.values.password,\n            disabled: isLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-block\",\n            children: \"Continue...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), isLogin ? /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"select group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: listOfGroups.map((item, step) => /*#__PURE__*/_jsxDEV(\"option\", {\n              title: \"manager : \" + item.mName + \"(\" + item.mEmail + \")\",\n              children: [item.name, \" \"]\n            }, step, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"New in courseries - \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"6Xs0mE6X1VUCgXqK1iInZHNb5ZQ=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/ilani/project/volunteers/src/login/SignIn.jsx"],"names":["Link","useHistory","Button","Form","useFormik","axios","React","useCallback","useEffect","useRef","useState","serverUrl","SignIn","props","history","isLogin","setIsLogin","listOfGroups","setListOfGroups","list","formik","enableReinitialize","initialValues","email","password","emailValid","onSubmit","values","result","get","params","console","log","data","user","JSON","stringify","groups","id","push","pathname","state","alert","map","g","handleSubmit","handleChange","item","step","mName","mEmail","name"],"mappings":"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","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\r\nimport './login.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport serverUrl from '../serverURL';\r\n\r\nconst SignIn = (props) => {\r\n    const history = useHistory();\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [listOfGroups, setListOfGroups] = useState();\r\n    const list = useRef();\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            emailValid: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            const email = values.email\r\n            if (email === \"\") {\r\n                formik.values.emailValid = \"please type email\";\r\n            }\r\n            else {\r\n\r\n                formik.values.emailValid = \"\";\r\n                const password = values.password;\r\n                //get the group for this user\r\n                const result = await axios.get(\"\" + serverUrl + \"api/User\", {\r\n                    params: {\r\n                        email: email,\r\n                        password: password\r\n                    }\r\n                });\r\n\r\n\r\n                console.log(result);\r\n                // if (result.data.err) {\r\n                //     history.push({ pathname: '/error', state: { status: result.data.status } });\r\n                //     return;\r\n                // }\r\n\r\n                if (result.data) {\r\n                    let user = result.data;\r\n                    if (user.email && user.password) {\r\n                        //paste hear\r\n                        user = JSON.stringify(user);\r\n                        ////save the user in the storage\r\n                        //go to choose group\r\n                        const groups = await axios.get(\"\" + serverUrl + \"api/Group\", {\r\n                            params: {\r\n                                id: result.data.id,\r\n                            }\r\n                        });\r\n                        setListOfGroups(groups.data);\r\n                        setIsLogin(true);\r\n                    }\r\n                    if (user.email && !user.password) {\r\n                        user.password = password;\r\n                        history.push({ pathname: \"/signup\", state: user });\r\n\r\n                    }\r\n                }\r\n                else alert(\"your email or password is incorrect\");\r\n            }\r\n        },\r\n    });\r\n    useEffect(() => {\r\n        if (isLogin) {\r\n            console.log(formik.values.email);\r\n            listOfGroups.map(g => {\r\n                <option key={g.id}>111</option>\r\n            });\r\n        }\r\n    }, [isLogin])\r\n\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => history.push(\"/\")} >\r\n                        <span aria-hidden=\"true\" >&times;</span>\r\n                    </button><br />\r\n                    <h3>Sign In</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.email} disabled={isLogin} />\r\n                        <span id=\"emailValid\" className=\"validMassage\">{formik.values.emailValid}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label><Button variant=\"link\" > (forget password)</Button>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.password} disabled={isLogin} />\r\n                    </div><br />\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Continue...</button><br />\r\n                        </div>\r\n                    {isLogin ?\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>select group</Form.Label>\r\n                            <Form.Control as=\"select\" >\r\n                                {listOfGroups.map((item,step) => \r\n                                    <option key={step} title={\"manager : \" + item.mName + \"(\" + item.mEmail + \")\"}>\r\n                                        {item.name} </option>\r\n                                )}\r\n                            </Form.Control>\r\n                        </Form.Group> : \"\"}\r\n                </form>\r\n            </div><br />\r\n            <div className=\"auth-inner\">\r\n                <h5>New in courseries - <Link to=\"/\"> Create Account</Link></h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SignIn; "]},"metadata":{},"sourceType":"module"}