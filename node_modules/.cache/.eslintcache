[{"C:\\Users\\User\\volunteers\\src\\index.js":"1","C:\\Users\\User\\volunteers\\src\\App.js":"2","C:\\Users\\User\\volunteers\\src\\scheduler\\Scheduler.js":"3","C:\\Users\\User\\volunteers\\src\\scheduler\\calendar2.jsx":"4","C:\\Users\\User\\volunteers\\src\\scheduler\\calendarDevExpress.jsx":"5","C:\\Users\\User\\volunteers\\src\\scheduler\\editScheduler.jsx":"6","C:\\Users\\User\\volunteers\\src\\login\\SignIn.jsx":"7","C:\\Users\\User\\volunteers\\src\\group\\create_group.jsx":"8","C:\\Users\\User\\volunteers\\src\\group\\group.jsx":"9","C:\\Users\\User\\volunteers\\src\\group\\addVolunteer.jsx":"10","C:\\Users\\User\\volunteers\\src\\scheduler\\SchedulerRow.js":"11","C:\\Users\\User\\volunteers\\src\\serverURL.js":"12","C:\\Users\\User\\volunteers\\src\\demo-data\\appointments.js":"13","C:\\Users\\User\\volunteers\\src\\login\\signUp.jsx":"14"},{"size":329,"mtime":1628157752178,"results":"15","hashOfConfig":"16"},{"size":1503,"mtime":1629978626170,"results":"17","hashOfConfig":"16"},{"size":3243,"mtime":1628157752197,"results":"18","hashOfConfig":"16"},{"size":9489,"mtime":1628157752200,"results":"19","hashOfConfig":"16"},{"size":5730,"mtime":1628157752202,"results":"20","hashOfConfig":"16"},{"size":4339,"mtime":1628503340349,"results":"21","hashOfConfig":"16"},{"size":7587,"mtime":1630475258210,"results":"22","hashOfConfig":"16"},{"size":2584,"mtime":1628157752176,"results":"23","hashOfConfig":"16"},{"size":843,"mtime":1628157752177,"results":"24","hashOfConfig":"16"},{"size":2473,"mtime":1630413597155,"results":"25","hashOfConfig":"16"},{"size":180,"mtime":1628157752198,"results":"26","hashOfConfig":"16"},{"size":72,"mtime":1628157752206,"results":"27","hashOfConfig":"16"},{"size":7595,"mtime":1628157752173,"results":"28","hashOfConfig":"16"},{"size":6473,"mtime":1630475258210,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1x48phz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\volunteers\\src\\index.js",[],["64","65"],"C:\\Users\\User\\volunteers\\src\\App.js",["66","67","68"],"import React, { createContext, useState, useEffect }  from 'react'\r\n\r\nimport Scheduler from './scheduler/Scheduler';\r\nimport Calendar from './scheduler/calendar2';\r\nimport SignIn from './login/SignIn';\r\nimport SignUp from './login/signUp'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport CreateGroup from './group/create_group';\r\nimport Group from './group/group';\r\nimport AddVolunteer from './group/addVolunteer';\r\nimport Demo from './scheduler/calendarDevExpress';\r\nimport EditScheduler from \"./scheduler/editScheduler\";\r\n\r\n//import WeekCalender from './scheduler/weekCalender';\r\nconst userContext = React.createContext({user: {}});\r\nconst groupContext = createContext();\r\nconst App = () => {\r\n  const [user ,setUser] = useState({});\r\n  useEffect(() => {\r\n    const userLocalStorage = localStorage.getItem(\"user\");\r\n    if(userLocalStorage)\r\n      setUser(userLocalStorage)\r\n  },[]);\r\n  return (\r\n    <userContext.Provider value={user}>\r\n      <Link to=\"/signin\">SignIn</Link>\r\n      <Switch>\r\n        <Route path=\"/signin\" component={SignIn} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n        <Route path=\"/createGroup\" component={CreateGroup} />\r\n        <Route path=\"/group\" component={Group} />\r\n        <Route path=\"/addVolunteer\" component={AddVolunteer} />\r\n        <Route path=\"/schedule\" component={Calendar}/>\r\n        <Route path=\"/editSchedule\" component={EditScheduler}/>\r\n      </Switch>\r\n    </userContext.Provider>\r\n  )\r\n\r\n}\r\nexport default App;","C:\\Users\\User\\volunteers\\src\\scheduler\\Scheduler.js",[],"C:\\Users\\User\\volunteers\\src\\scheduler\\calendar2.jsx",["69","70","71","72","73","74","75","76","77"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport './CalendarStyles.css';\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, popupClose } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport Button from 'react-bootstrap/esm/Button';\r\nconst arr1 = [\r\n    {\r\n        start: \"Sun Mar 07 2021 19:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sun Mar 07 2021 20:00:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Sun Mar 07 2021 21:30:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sun Mar 07 2021 23:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Wed Mar 10 2021 21:30:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Wed Mar 10 2021 23:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Sat Mar 13 2021 21:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sat Mar 13 2021 22:00:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Thu Mar 11 2021 21:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Thu Mar 11 2021 22:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n]\r\nconst arr2 = [];\r\nconst Calendar = (props) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const calendar = useRef()\r\n    const first = useRef(false);\r\n    const [time, setTime] = useState(0);\r\n    const [events, setEvents] = useState(location.state.events);\r\n    const [group, setGroup] = useState(location.state.group);\r\n    \r\n    const getMonthCellContent = (date) => {\r\n        if (date.getMonth() === 10 && date.getDate() === 23) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 9) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/get-together.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 13) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 22) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/thanksgiving-day.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 24) {\r\n            return '<img src=\"https://ej2.syncfusion.com/demos/src/schedule/images/christmas-eve.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 25) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/christmas.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 1) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 14) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        return '';\r\n    }\r\n    const getWorkCellText = (date) => {\r\n        let weekEnds = [0, 6];\r\n        if (weekEnds.indexOf(date.getDay()) >= 0) {\r\n            return \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\";\r\n        }\r\n        return '';\r\n    }\r\n    const cellTemplate = (props) => {\r\n        if (props.type === \"workCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getWorkCellText(props.date) }}></div>);\r\n        }\r\n        if (props.type === \"monthCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getMonthCellContent(props.date) }}></div>);\r\n        }\r\n        return (<div></div>);\r\n    }\r\n    const sortArr = () => {\r\n        for (let index = 0; index < events.length; index++) {\r\n\r\n            let dt = new Date(events[index].StartTime);\r\n            let dtEnd = new Date(events[index].EndTime);\r\n            while (dt < dtEnd) {\r\n                arr2.push(dt);\r\n                dt = new Date(dt);\r\n                dt.setMinutes(dt.getMinutes() + 30);\r\n            }\r\n        }\r\n        for (let i = 0; i < arr2.length; i++) {\r\n\r\n            for (let j = i + 1; j < arr2.length; j++) {\r\n\r\n                if (arr2[i].getHours() > arr2[j].getHours()) {\r\n                    //if (start.getMinutes() > end.getHours()\r\n                    [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                }\r\n                else if (arr2[i].getHours() === arr2[j].getHours()) {\r\n                    if (arr2[i].getMinutes() > arr2[j].getMinutes()) {\r\n                        [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                    }\r\n                    else if (arr2[i].getMinutes() === arr2[j].getMinutes()) {\r\n                        if (arr2[i].getDay() > arr2[j].getDay()) {\r\n                            [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    const onRenderCell = (e) => {\r\n        if (!first.current) { setTime(performance.now()); sortArr(); first.current = true; console.log(arr1) }\r\n        // console.log(e.date ? e.date : \"null\");\r\n        const t = performance.now();\r\n        console.log(e.date);\r\n        if (arr2.length && e.date) {\r\n            if (Date.parse(e.date) === Date.parse(arr2[0])) {\r\n                e.element.classList.add(\"my-cell\");\r\n                arr2.shift();\r\n            }\r\n            else {\r\n                //e.onClick = handleDisabled;\r\n            }\r\n        }\r\n        if (e.date && e.date.getDay() === 6 && e.date.getHours() === 23) {\r\n            const t = performance.now() - time;\r\n            console.log(t);\r\n        }\r\n    }\r\n    const editorTemplate = (props) => {\r\n        return (props !== undefined ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Summary</td><td colSpan={4}>\r\n                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} disabled={true} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Status</td><td colSpan={4}>\r\n                <DropDownListComponent id=\"EventType\" placeholder='Choose status' data-name=\"EventType\" className=\"e-field\" style={{ width: '100%' }} dataSource={['New', 'Requested', 'Confirmed']} value={props.EventType || null}></DropDownListComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"StartTime\" data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)} className=\"e-field\" disabled={true}></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Reason</td><td colSpan={4}>\r\n                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n            </td></tr></tbody></table> : <div></div>);\r\n    }\r\n    const penPopUp = (args) => {\r\n        if (![...args.target.classList].includes(\"my-cell\")) {\r\n            args.cancel = true;\r\n        }\r\n    }\r\n    const click = () => {\r\n        console.log(calendar.current);\r\n        console.log(calendar.current);\r\n    }\r\n    return (<>\r\n        <div ><Button variant=\"link\" onClick={() => history.push({ pathname: \"/addVolunteer\", state: { group: group } })}>Add Volunteers</Button>\r\n            <Button variant=\"link\" onClick={() => history.push({ pathname: \"/editSchedule\", state: { group: group } })}>Edit Schedule</Button></div>\r\n        <ScheduleComponent ref={calendar} renderCell={(e) => onRenderCell(e)} width='100%' height='550px'\r\n            editorTemplate={(e) => editorTemplate(e)} popupOpen={(args) => penPopUp(args)}>\r\n            <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n        </ScheduleComponent><button onClick={() => click()}></button></>);\r\n}\r\nexport default Calendar;\r\n","C:\\Users\\User\\volunteers\\src\\scheduler\\calendarDevExpress.jsx",[],"C:\\Users\\User\\volunteers\\src\\scheduler\\editScheduler.jsx",["78","79","80","81","82","83","84"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport serverURL from \"../serverURL\";\r\nimport './CalendarStyles.css'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent, TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\n\r\nconst EditScheduler = () => {\r\n    const location = useLocation();\r\n    const calendar = useRef();\r\n    //const [events, setEvents] = useState([]);\r\n    const [group, setGroup] = useState(location.state.group);\r\n    const history = useHistory();\r\n    const sendData = async () => {\r\n        const events = calendar.current.eventsData;\r\n        const result = await axios.put(\"\" + serverURL + \"api/Event\", {\r\n            events: events,\r\n            group: group\r\n        });\r\n        console.log(result);\r\n        debugger;\r\n        setGroup({ ...group, ['events']:JSON.stringify(events) });\r\n\r\n        //calendar.current.eventsData = [];\r\n        calendar.current.eventsData.forEach(event => {\r\n            calendar.current.deleteEvent(event.Id);\r\n        });\r\n        history.push({ pathname: \"/schedule\", state: { events: group.events, group: group } });\r\n\r\n    }\r\n    const editorTemplate = (props) => {\r\n        return (props !== undefined ? <table className=\"custom-event-editor\" value=\"123\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Title</td><td colSpan={4}>\r\n                <input id=\"title\" className=\"e-field e-input\" type=\"text\" name=\"title\" style={{ width: '100%' }} disabled={true}\r\n                    value=\"volunteer time\" />\r\n            </td></tr>\r\n\r\n            <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n                <TimePickerComponent  format={{ skeleton: 'Hms' }} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n        </tbody></table> : <div></div>);\r\n    }\r\n    const header = () =>{\r\n        return ( <><button id=\"close\" className=\"e-close e-close-icon e-icons\" title=\"Close\" onClick={()=>calendar.current.closeQuickInfoPopup()}/>\r\n        <h4>add volunteer time</h4></>);\r\n\r\n    }\r\n    const content = () =>{\r\n        return (<div>\r\n            <TimePickerComponent  placeholder=\"from\" format={{ skeleton: 'Hms' }} />\r\n            <TimePickerComponent placeholder=\"to\" format={{ skeleton: 'Hms' }} />\r\n        </div>);\r\n    }\r\n     \r\n    return (<div><ButtonComponent onClick={() => sendData()} variant=\"link\" >save schedule</ButtonComponent>\r\n        <ScheduleComponent ref={calendar} width='100%' height='550px' eventSettings={{ dataSource: JSON.parse(group.events) }}\r\n            editorTemplate={(e) => editorTemplate(e)} quickInfoTemplates={{ header: header, content: content}}>       \r\n            <Inject services={[Day, Week, WorkWeek, Month]} />\r\n        </ScheduleComponent></div >);\r\n\r\n}\r\nexport default EditScheduler;\r\n//quickInfoTemplates={{ header: this.header.bind(this), content: this.content.bind(this), footer: this.footer.bind(this) }}","C:\\Users\\User\\volunteers\\src\\login\\SignIn.jsx",["85","86","87","88","89","90"],"C:\\Users\\User\\volunteers\\src\\group\\create_group.jsx",[],"C:\\Users\\User\\volunteers\\src\\group\\group.jsx",["91","92"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport serverURL from '../serverURL';\r\nimport Calendar from '../scheduler/calendar2';\r\nconst Group = () => {\r\n        const location = useLocation();\r\n        const [group, setGroup] = useState(location.state.group);\r\n        const [events, setEvents] = useState([]);\r\n        useEffect(async() => {\r\n                const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                        params: {\r\n                                id : group.id,\r\n                        }\r\n                });\r\n                setGroup(result.data);\r\n                setEvents(JSON.parse(result.data.events));\r\n        }, [])\r\n\r\n        return <Calendar group = {group} events={events}/>\r\n}\r\nexport default Group;","C:\\Users\\User\\volunteers\\src\\group\\addVolunteer.jsx",["93","94","95","96","97","98","99","100","101"],"import axios from 'axios';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport serverURL from '../serverURL';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nconst container = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n}\r\nconst AddVolunteer = () => {\r\n\r\n    const [volunteers, setVolunteers] = useState(new Array(10).fill(<Form.Control type=\"email\" placeholder=\"Enter email\" />));\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const formRef = useRef();\r\n    const [group, setGroup] = useState();\r\n    useEffect(() => {\r\n        if (location.state && location.state.group)\r\n            setGroup(location.state.group)\r\n    }, []);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const arr = Array.prototype.slice.call(e.target.children[0].children);\r\n        const volunteers = [];\r\n        arr.map((chaild, index) => {\r\n            if (chaild.value) {\r\n                const email = chaild.value;\r\n                volunteers.push({ email: email });\r\n            }\r\n        });\r\n        axios.post(\"\" + serverURL + \"AddUsers\", {\r\n            list: volunteers,\r\n            group: group\r\n        })\r\n        formRef.current.reset();\r\n    }\r\n    return (<div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <div>\r\n                <h3 style={{ display: \"inline-block\" }}>Add Volunteers</h3>\r\n                <Tooltip title=\"Add\" aria-label=\"add\">\r\n                  \r\n                        <AddCircle style={{float:\"right\"}}/>\r\n                    \r\n                </Tooltip></div>\r\n            <Form ref={formRef} onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                <div className=\"mb-3\">\r\n                    {volunteers.map((element, index) => element)}\r\n                </div>\r\n                <Button type=\"submit\" block >Add all and send email</Button>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default AddVolunteer;","C:\\Users\\User\\volunteers\\src\\scheduler\\SchedulerRow.js",[],"C:\\Users\\User\\volunteers\\src\\serverURL.js",[],"C:\\Users\\User\\volunteers\\src\\demo-data\\appointments.js",[],"C:\\Users\\User\\volunteers\\src\\login\\signUp.jsx",["102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":12},{"ruleId":"108","severity":1,"message":"113","line":20,"column":7,"nodeType":"110","messageId":"111","endLine":20,"endColumn":19},{"ruleId":"108","severity":1,"message":"114","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":29},{"ruleId":"108","severity":1,"message":"115","line":1,"column":31,"nodeType":"110","messageId":"111","endLine":1,"endColumn":40},{"ruleId":"108","severity":1,"message":"116","line":13,"column":73,"nodeType":"110","messageId":"111","endLine":13,"endColumn":83},{"ruleId":"108","severity":1,"message":"117","line":52,"column":20,"nodeType":"110","messageId":"111","endLine":52,"endColumn":29},{"ruleId":"108","severity":1,"message":"118","line":53,"column":19,"nodeType":"110","messageId":"111","endLine":53,"endColumn":27},{"ruleId":"108","severity":1,"message":"119","line":55,"column":11,"nodeType":"110","messageId":"111","endLine":55,"endColumn":30},{"ruleId":"108","severity":1,"message":"120","line":82,"column":11,"nodeType":"110","messageId":"111","endLine":82,"endColumn":26},{"ruleId":"108","severity":1,"message":"121","line":89,"column":11,"nodeType":"110","messageId":"111","endLine":89,"endColumn":23},{"ruleId":"108","severity":1,"message":"122","line":135,"column":15,"nodeType":"110","messageId":"111","endLine":135,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":29},{"ruleId":"108","severity":1,"message":"115","line":1,"column":31,"nodeType":"110","messageId":"111","endLine":1,"endColumn":40},{"ruleId":"108","severity":1,"message":"123","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"108","severity":1,"message":"124","line":18,"column":65,"nodeType":"110","messageId":"111","endLine":18,"endColumn":79},{"ruleId":"108","severity":1,"message":"125","line":18,"column":81,"nodeType":"110","messageId":"111","endLine":18,"endColumn":94},{"ruleId":"108","severity":1,"message":"126","line":19,"column":10,"nodeType":"110","messageId":"111","endLine":19,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":37,"column":30,"nodeType":"129","messageId":"130","endLine":37,"endColumn":63,"fix":"131"},{"ruleId":"108","severity":1,"message":"132","line":8,"column":17,"nodeType":"110","messageId":"111","endLine":8,"endColumn":28},{"ruleId":"108","severity":1,"message":"133","line":11,"column":10,"nodeType":"110","messageId":"111","endLine":11,"endColumn":26},{"ruleId":"108","severity":1,"message":"134","line":18,"column":12,"nodeType":"110","messageId":"111","endLine":18,"endColumn":18},{"ruleId":"108","severity":1,"message":"135","line":20,"column":11,"nodeType":"110","messageId":"111","endLine":20,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":68,"column":15,"nodeType":"138","endLine":80,"endColumn":6},{"ruleId":"136","severity":1,"message":"139","line":80,"column":8,"nodeType":"140","endLine":80,"endColumn":10,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"137","line":10,"column":19,"nodeType":"138","endLine":18,"endColumn":10},{"ruleId":"136","severity":1,"message":"142","line":18,"column":12,"nodeType":"140","endLine":18,"endColumn":14,"suggestions":"143"},{"ruleId":"108","severity":1,"message":"144","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":30},{"ruleId":"108","severity":1,"message":"145","line":10,"column":8,"nodeType":"110","messageId":"111","endLine":10,"endColumn":15},{"ruleId":"108","severity":1,"message":"146","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":11},{"ruleId":"108","severity":1,"message":"147","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":18},{"ruleId":"108","severity":1,"message":"148","line":14,"column":7,"nodeType":"110","messageId":"111","endLine":14,"endColumn":16},{"ruleId":"108","severity":1,"message":"149","line":21,"column":24,"nodeType":"110","messageId":"111","endLine":21,"endColumn":37},{"ruleId":"108","severity":1,"message":"150","line":23,"column":11,"nodeType":"110","messageId":"111","endLine":23,"endColumn":18},{"ruleId":"136","severity":1,"message":"151","line":29,"column":8,"nodeType":"140","endLine":29,"endColumn":10,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":34,"column":33,"nodeType":"138","messageId":"155","endLine":34,"endColumn":35},{"ruleId":"108","severity":1,"message":"156","line":16,"column":12,"nodeType":"110","messageId":"111","endLine":16,"endColumn":17},{"ruleId":"108","severity":1,"message":"134","line":17,"column":12,"nodeType":"110","messageId":"111","endLine":17,"endColumn":18},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Scheduler' is defined but never used.","Identifier","unusedVar","'Demo' is defined but never used.","'groupContext' is assigned a value but never used.","'cloneElement' is defined but never used.","'useEffect' is defined but never used.","'popupClose' is defined but never used.","'setEvents' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'getMonthCellContent' is assigned a value but never used.","'getWorkCellText' is assigned a value but never used.","'cellTemplate' is assigned a value but never used.","'t' is assigned a value but never used.","'Button' is defined but never used.","'ViewsDirective' is defined but never used.","'ViewDirective' is defined but never used.","'DropDownListComponent' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['events'] found.","Property","unnecessarilyComputedProperty",{"range":"159","text":"160"},"'useCallback' is defined but never used.","'useLocationState' is defined but never used.","'events' is assigned a value but never used.","'list' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["161"],"React Hook useEffect has a missing dependency: 'group.id'. Either include it or remove the dependency array.",["162"],"'BsFillPlusCircleFill' is defined but never used.","'AddIcon' is defined but never used.","'Fab' is defined but never used.","'IconButton' is defined but never used.","'container' is assigned a value but never used.","'setVolunteers' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["163"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'group' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1963,1973],"'events'",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [location]",{"range":"170","text":"171"},"Update the dependencies array to be: [group.id]",{"range":"172","text":"173"},"Update the dependencies array to be: [location.state]",{"range":"174","text":"175"},[3128,3130],"[location]",[752,754],"[group.id]",[1195,1197],"[location.state]"]