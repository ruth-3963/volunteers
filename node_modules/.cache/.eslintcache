[{"C:\\Users\\User\\volunteers\\src\\index.js":"1","C:\\Users\\User\\volunteers\\src\\App.js":"2","C:\\Users\\User\\volunteers\\src\\scheduler\\Scheduler.js":"3","C:\\Users\\User\\volunteers\\src\\scheduler\\calendar2.jsx":"4","C:\\Users\\User\\volunteers\\src\\scheduler\\editScheduler.jsx":"5","C:\\Users\\User\\volunteers\\src\\login\\SignIn.jsx":"6","C:\\Users\\User\\volunteers\\src\\group\\create_group.jsx":"7","C:\\Users\\User\\volunteers\\src\\group\\group.jsx":"8","C:\\Users\\User\\volunteers\\src\\group\\addVolunteer.jsx":"9","C:\\Users\\User\\volunteers\\src\\scheduler\\SchedulerRow.js":"10","C:\\Users\\User\\volunteers\\src\\serverURL.js":"11","C:\\Users\\User\\volunteers\\src\\demo-data\\appointments.js":"12","C:\\Users\\User\\volunteers\\src\\login\\signUp.jsx":"13","C:\\Users\\User\\volunteers\\src\\scheduler\\goodCalendar.jsx":"14","C:\\Users\\User\\volunteers\\src\\scheduler\\datasource.js":"15","C:\\Users\\User\\volunteers\\src\\scheduler\\editScheduer2.jsx":"16","C:\\Users\\User\\volunteers\\src\\scheduler\\chooseEvents.jsx":"17","C:\\Users\\User\\volunteers\\src\\colors.js":"18","C:\\Users\\User\\volunteers\\src\\group\\chhoseGroup.jsx":"19","C:\\Users\\User\\volunteers\\src\\group\\chooseColor.jsx":"20"},{"size":329,"mtime":1628157752178,"results":"21","hashOfConfig":"22"},{"size":2266,"mtime":1637607220702,"results":"23","hashOfConfig":"22"},{"size":3243,"mtime":1628157752197,"results":"24","hashOfConfig":"22"},{"size":9489,"mtime":1628157752200,"results":"25","hashOfConfig":"22"},{"size":4339,"mtime":1633267027783,"results":"26","hashOfConfig":"22"},{"size":7736,"mtime":1637607220702,"results":"27","hashOfConfig":"22"},{"size":2867,"mtime":1637607220702,"results":"28","hashOfConfig":"22"},{"size":843,"mtime":1628157752177,"results":"29","hashOfConfig":"22"},{"size":2473,"mtime":1630413597155,"results":"30","hashOfConfig":"22"},{"size":180,"mtime":1628157752198,"results":"31","hashOfConfig":"22"},{"size":72,"mtime":1628157752206,"results":"32","hashOfConfig":"22"},{"size":7595,"mtime":1628157752173,"results":"33","hashOfConfig":"22"},{"size":6516,"mtime":1637607220810,"results":"34","hashOfConfig":"22"},{"size":6436,"mtime":1633266597299,"results":"35","hashOfConfig":"22"},{"size":495,"mtime":1634565336186,"results":"36","hashOfConfig":"22"},{"size":4710,"mtime":1637607220702,"results":"37","hashOfConfig":"22"},{"size":5239,"mtime":1637765430397,"results":"38","hashOfConfig":"22"},{"size":2310,"mtime":1635870976533,"results":"39","hashOfConfig":"22"},{"size":1103,"mtime":1635872891550,"results":"40","hashOfConfig":"22"},{"size":2615,"mtime":1637606451105,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1x48phz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\User\\volunteers\\src\\index.js",[],["97","98"],"C:\\Users\\User\\volunteers\\src\\App.js",["99","100","101","102","103","104"],"import React, { createContext, useState, useEffect } from 'react'\r\n\r\nimport Scheduler from './scheduler/Scheduler';\r\nimport Calendar from './scheduler/goodCalendar';\r\nimport SignIn from './login/SignIn';\r\nimport SignUp from './login/signUp'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport CreateGroup from './group/create_group';\r\nimport Group from './group/group';\r\nimport AddVolunteer from './group/addVolunteer';\r\nimport EditScheduler2 from './scheduler/editScheduer2';\r\nimport ChooseEvents from './scheduler/chooseEvents';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { SignalWifiOffOutlined } from '@material-ui/icons';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport CSS_COLOR_NAMES from './colors';\r\nimport { Dropdown } from 'react-bootstrap';\r\n//import WeekCalender from './scheduler/weekCalender';\r\nexport const UserContext = React.createContext({ user: {} });\r\nconst groupContext = createContext();\r\nconst App = () => {\r\n  const [user, setUser] = useState({});\r\n  const [isLogin, setIsLogin] = useState()\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const userLocalStorage = localStorage.getItem(\"user\");\r\n    if(JSON.parse(userLocalStorage))\r\n      setIsLogin(true)\r\n  }, [isLogin]);\r\n  const signOut = () => {\r\n    localStorage.setItem(\"user\", null);\r\n    localStorage.setItem(\"group\", null);\r\n    localStorage.setItem(\"userToGroup\",null);\r\n    setIsLogin(false);\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <UserContext.Provider value={{user,setUser}}>\r\n      {\r\n        isLogin ? <Button variant=\"link\" onClick={(e) => signOut()}>Sign out</Button> :\r\n          <Link to=\"/signin\">SignIn</Link>\r\n      }\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Calendar} />\r\n        <Route path=\"/signin\" component={SignIn} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n        <Route path=\"/createGroup\" component={CreateGroup} />\r\n        <Route path=\"/group\" component={Group} />\r\n        <Route path=\"/addVolunteer\" component={AddVolunteer} />\r\n        <Route path=\"/chooseEvents/:id\" component={ChooseEvents} />\r\n        <Route path=\"/editSchedule/:id\" component={EditScheduler2} />\r\n      </Switch>\r\n    </UserContext.Provider>\r\n  )\r\n\r\n}\r\nexport default App;","C:\\Users\\User\\volunteers\\src\\scheduler\\Scheduler.js",[],"C:\\Users\\User\\volunteers\\src\\scheduler\\calendar2.jsx",["105","106","107","108","109","110","111","112","113"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport './CalendarStyles.css';\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, popupClose } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport Button from 'react-bootstrap/esm/Button';\r\nconst arr1 = [\r\n    {\r\n        start: \"Sun Mar 07 2021 19:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sun Mar 07 2021 20:00:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Sun Mar 07 2021 21:30:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sun Mar 07 2021 23:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Wed Mar 10 2021 21:30:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Wed Mar 10 2021 23:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Sat Mar 13 2021 21:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sat Mar 13 2021 22:00:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Thu Mar 11 2021 21:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Thu Mar 11 2021 22:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n]\r\nconst arr2 = [];\r\nconst Calendar = (props) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const calendar = useRef()\r\n    const first = useRef(false);\r\n    const [time, setTime] = useState(0);\r\n    const [events, setEvents] = useState(location.state.events);\r\n    const [group, setGroup] = useState(location.state.group);\r\n    \r\n    const getMonthCellContent = (date) => {\r\n        if (date.getMonth() === 10 && date.getDate() === 23) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 9) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/get-together.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 13) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 22) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/thanksgiving-day.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 24) {\r\n            return '<img src=\"https://ej2.syncfusion.com/demos/src/schedule/images/christmas-eve.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 25) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/christmas.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 1) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 14) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        return '';\r\n    }\r\n    const getWorkCellText = (date) => {\r\n        let weekEnds = [0, 6];\r\n        if (weekEnds.indexOf(date.getDay()) >= 0) {\r\n            return \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\";\r\n        }\r\n        return '';\r\n    }\r\n    const cellTemplate = (props) => {\r\n        if (props.type === \"workCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getWorkCellText(props.date) }}></div>);\r\n        }\r\n        if (props.type === \"monthCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getMonthCellContent(props.date) }}></div>);\r\n        }\r\n        return (<div></div>);\r\n    }\r\n    const sortArr = () => {\r\n        for (let index = 0; index < events.length; index++) {\r\n\r\n            let dt = new Date(events[index].StartTime);\r\n            let dtEnd = new Date(events[index].EndTime);\r\n            while (dt < dtEnd) {\r\n                arr2.push(dt);\r\n                dt = new Date(dt);\r\n                dt.setMinutes(dt.getMinutes() + 30);\r\n            }\r\n        }\r\n        for (let i = 0; i < arr2.length; i++) {\r\n\r\n            for (let j = i + 1; j < arr2.length; j++) {\r\n\r\n                if (arr2[i].getHours() > arr2[j].getHours()) {\r\n                    //if (start.getMinutes() > end.getHours()\r\n                    [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                }\r\n                else if (arr2[i].getHours() === arr2[j].getHours()) {\r\n                    if (arr2[i].getMinutes() > arr2[j].getMinutes()) {\r\n                        [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                    }\r\n                    else if (arr2[i].getMinutes() === arr2[j].getMinutes()) {\r\n                        if (arr2[i].getDay() > arr2[j].getDay()) {\r\n                            [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    const onRenderCell = (e) => {\r\n        if (!first.current) { setTime(performance.now()); sortArr(); first.current = true; console.log(arr1) }\r\n        // console.log(e.date ? e.date : \"null\");\r\n        const t = performance.now();\r\n        console.log(e.date);\r\n        if (arr2.length && e.date) {\r\n            if (Date.parse(e.date) === Date.parse(arr2[0])) {\r\n                e.element.classList.add(\"my-cell\");\r\n                arr2.shift();\r\n            }\r\n            else {\r\n                //e.onClick = handleDisabled;\r\n            }\r\n        }\r\n        if (e.date && e.date.getDay() === 6 && e.date.getHours() === 23) {\r\n            const t = performance.now() - time;\r\n            console.log(t);\r\n        }\r\n    }\r\n    const editorTemplate = (props) => {\r\n        return (props !== undefined ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Summary</td><td colSpan={4}>\r\n                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} disabled={true} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Status</td><td colSpan={4}>\r\n                <DropDownListComponent id=\"EventType\" placeholder='Choose status' data-name=\"EventType\" className=\"e-field\" style={{ width: '100%' }} dataSource={['New', 'Requested', 'Confirmed']} value={props.EventType || null}></DropDownListComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"StartTime\" data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)} className=\"e-field\" disabled={true}></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Reason</td><td colSpan={4}>\r\n                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n            </td></tr></tbody></table> : <div></div>);\r\n    }\r\n    const penPopUp = (args) => {\r\n        if (![...args.target.classList].includes(\"my-cell\")) {\r\n            args.cancel = true;\r\n        }\r\n    }\r\n    const click = () => {\r\n        console.log(calendar.current);\r\n        console.log(calendar.current);\r\n    }\r\n    return (<>\r\n        <div ><Button variant=\"link\" onClick={() => history.push({ pathname: \"/addVolunteer\", state: { group: group } })}>Add Volunteers</Button>\r\n            <Button variant=\"link\" onClick={() => history.push({ pathname: \"/editSchedule\", state: { group: group } })}>Edit Schedule</Button></div>\r\n        <ScheduleComponent ref={calendar} renderCell={(e) => onRenderCell(e)} width='100%' height='550px'\r\n            editorTemplate={(e) => editorTemplate(e)} popupOpen={(args) => penPopUp(args)}>\r\n            <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n        </ScheduleComponent><button onClick={() => click()}></button></>);\r\n}\r\nexport default Calendar;\r\n","C:\\Users\\User\\volunteers\\src\\scheduler\\editScheduler.jsx",["114","115","116","117","118","119","120"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport serverURL from \"../serverURL\";\r\nimport './CalendarStyles.css'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent, TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\n\r\nconst EditScheduler = () => {\r\n    const location = useLocation();\r\n    const calendar = useRef();\r\n    //const [events, setEvents] = useState([]);\r\n    const [group, setGroup] = useState(location.state.group);\r\n    const history = useHistory();\r\n    const sendData = async () => {\r\n        const events = calendar.current.eventsData;\r\n        const result = await axios.put(\"\" + serverURL + \"api/Event\", {\r\n            events: events,\r\n            group: group\r\n        });\r\n        console.log(result);\r\n        debugger;\r\n        setGroup({ ...group, ['events']:JSON.stringify(events) });\r\n\r\n        //calendar.current.eventsData = [];\r\n        calendar.current.eventsData.forEach(event => {\r\n            calendar.current.deleteEvent(event.Id);\r\n        });\r\n        history.push({ pathname: \"/schedule\", state: { events: group.events, group: group } });\r\n\r\n    }\r\n    const editorTemplate = (props) => {\r\n        return (props !== undefined ? <table className=\"custom-event-editor\" value=\"123\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Title</td><td colSpan={4}>\r\n                <input id=\"title\" className=\"e-field e-input\" type=\"text\" name=\"title\" style={{ width: '100%' }} disabled={true}\r\n                    value=\"volunteer time\" />\r\n            </td></tr>\r\n\r\n            <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n                <TimePickerComponent  format={{ skeleton: 'Hms' }} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n        </tbody></table> : <div></div>);\r\n    }\r\n    const header = () =>{\r\n        return ( <><button id=\"close\" className=\"e-close e-close-icon e-icons\" title=\"Close\" onClick={()=>calendar.current.closeQuickInfoPopup()}/>\r\n        <h4>add volunteer time</h4></>);\r\n\r\n    }\r\n    const content = () =>{\r\n        return (<div>\r\n            <TimePickerComponent  placeholder=\"from\" format={{ skeleton: 'Hms' }} />\r\n            <TimePickerComponent placeholder=\"to\" format={{ skeleton: 'Hms' }} />\r\n        </div>);\r\n    }\r\n     \r\n    return (<div><ButtonComponent onClick={() => sendData()} variant=\"link\" >save schedule</ButtonComponent>\r\n        <ScheduleComponent ref={calendar} width='100%' height='550px' eventSettings={{ dataSource: JSON.parse(group.events) }}\r\n            editorTemplate={(e) => editorTemplate(e)} quickInfoTemplates={{ header: header, content: content}}>       \r\n            <Inject services={[Day, Week, WorkWeek, Month]} />\r\n        </ScheduleComponent></div >);\r\n\r\n}\r\nexport default EditScheduler;\r\n//quickInfoTemplates={{ header: this.header.bind(this), content: this.content.bind(this), footer: this.footer.bind(this) }}",["121","122"],"C:\\Users\\User\\volunteers\\src\\login\\SignIn.jsx",["123","124","125","126","127","128"],"import { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport './login.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport serverURL from '../serverURL';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useLocationState } from 'react-router-use-location-state';\r\nconst SignIn = (props) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [listOfGroups, setListOfGroups] = useState(null);\r\n    const [group, setGroup] = useState();\r\n    const [events, setEvents] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const list = useRef();\r\n    const handleShow = () => { setShow(true) }\r\n    const handleClose = () => { setShow(false) }\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            group: '',\r\n            emailValid: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            const email = values.email\r\n            if (email === \"\") {\r\n                formik.values.emailValid = \"please type email\";\r\n            }\r\n            else {\r\n                formik.values.emailValid = \"\";\r\n                const password = values.password;\r\n                const result = await axios.get(\"\" + serverURL + \"api/User\", {\r\n                    params: {\r\n                        email: email,\r\n                        password: password\r\n                    }\r\n                });\r\n                if (result.data) {\r\n                    let user = result.data;\r\n                    if (user.email && user.password) {\r\n                        localStorage.setItem(\"user\", JSON.stringify(user));\r\n                        const groups = await axios.get(\"\" + serverURL + \"GetByManager\", {\r\n                            params: {\r\n                                id: result.data.id,\r\n                            }\r\n                        });\r\n                        setListOfGroups(groups.data);\r\n                        setIsLogin(true);\r\n                    }\r\n                    if (user.email && !user.password) {\r\n                        user.password = password;\r\n                        history.push({ pathname: \"/signup\", state: user });\r\n                    }\r\n                }\r\n                else alert(\"your email or password is incorrect\");\r\n            }\r\n        },\r\n    });\r\n    useEffect(async () => {\r\n        if (location && location.state && location.state.from && location.state.from.pathname === \"/signup\") {\r\n            const groups = await axios.get(\"\" + serverURL + \"GetByManager\", {\r\n                params: {\r\n                    id: location.state.user.id,\r\n                }\r\n            });\r\n            setListOfGroups(groups.data);\r\n            setIsLogin(true);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const submitAllValue = async () => {\r\n        debugger;\r\n        const formikGroup = formik.values.group;\r\n        if (formikGroup === \"create new group\" || !listOfGroups.length) {\r\n            history.push({ pathname: \"/createGroup\", state: { email: formik.values.email } });\r\n        }\r\n        else {\r\n            const index = formikGroup ? listOfGroups.findIndex(g => g.name === formikGroup) : 0;\r\n            const group = listOfGroups[index];\r\n            const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                params: {\r\n                    id: group.id,\r\n                }\r\n            });\r\n            setGroup(result.data);\r\n            localStorage.setItem(\"group\", JSON.stringify(result.data));\r\n            history.push({ pathname: \"editSchedule/\" + result.data.id });\r\n            if (result.data.events) {\r\n                setEvents(JSON.parse(result.data.events));\r\n                history.push({ pathname: \"/schedule\", state: { group: result.data, events: JSON.parse(result.data.events) } });\r\n            }\r\n            else {\r\n                handleShow();\r\n            }\r\n            //history.push({pathname:\"/group\",state:{group:listOfGroups[index]}});\r\n        };\r\n    }\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => history.push(\"/\")} >\r\n                        <span aria-hidden=\"true\" >&times;</span>\r\n                    </button><br />\r\n                    <h3>Sign In</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.email} disabled={isLogin} />\r\n                        <span id=\"emailValid\" className=\"validMassage\">{formik.values.emailValid}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label><Button variant=\"link\" > (forget password)</Button>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.password} disabled={isLogin} />\r\n                    </div>\r\n                    {!isLogin ? <><br /><div className=\"form-group\">\r\n                        <Button type=\"submit\" variant=\"outline-primary\" block>Continue...</Button>\r\n                    </div></> : \"\"\r\n                    }\r\n                    {isLogin ?\r\n                        <><Form.Group >\r\n                            <Form.Label>select group</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"group\" name=\"group\" value={formik.values.group} onChange={formik.handleChange}>\r\n                                {listOfGroups.map((item, step) =>\r\n                                    <option key={step} title={\"manager : \" + item.mName + \"(\" + item.mEmail + \")\"}>\r\n                                        {item.name} </option>\r\n                                )}\r\n                                <option key={listOfGroups ? listOfGroups.length : 0}>create new group</option>\r\n                            </Form.Control>\r\n                        </Form.Group><br /> <Button variant=\"primary\" block onClick={() => submitAllValue()}>Submit</Button></> : \"\"}                </form>\r\n\r\n            </div><br />\r\n            <div className=\"auth-inner\">\r\n                <h6>You are new volunteer - <Link to=\"/signup\"> Create Account</Link></h6>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Choose what do yo want to do with your group</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>you till dont declare the schedule to your group</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => history.push({ pathname: \"/editSchedule\", state: { group: group } })}>\r\n                        Edit Schedule\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => { debugger; history.push({ pathname: \"/addVolunteer\", state: { group: group } }) }}>\r\n                        Add volunteers\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default SignIn;","C:\\Users\\User\\volunteers\\src\\group\\create_group.jsx",["129","130"],"import axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport serverURL from '../serverURL';\r\nconst CreateGroup = () => {\r\n    const location = useLocation();\r\n    const [isCreate, setIsCreate] = useState(false);\r\n    const [group ,setGroup] = useState(null);\r\n    const [localUser , setLocalUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n    const [localGroup , setLocalGroup] = useState(JSON.parse(localStorage.getItem(\"group\")))\r\n    const history = useHistory();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            description: '',\r\n        },\r\n        onSubmit:async(values) => {\r\n            const result = await axios.post(\"\" + serverURL + \"api/Group\", {\r\n                id_manager: localUser.id,\r\n                name: values.name,\r\n                description: values.description\r\n            })\r\n            if (result.data) {\r\n                setIsCreate(true);\r\n                setGroup(result.data);\r\n                setLocalGroup(result.data);\r\n                localStorage.setItem(\"group\", JSON.stringify(result.data));\r\n            }\r\n            else {\r\n                alert(\"we dont succed to create group maybe yo have another group with the same name?\");\r\n            }\r\n\r\n        },\r\n    });\r\n    return (<div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n        <h3>Create group</h3>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Group name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"enter group name\" id=\"name\" name=\"name\"\r\n                    onChange={formik.handleChange} value={formik.values.name} disabled={isCreate} />\r\n               \r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Description on your group</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} id=\"description\" name=\"description\"\r\n                    onChange={formik.handleChange} value={formik.values.description} disabled={isCreate} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\" block hidden={isCreate}>Submit</Button>\r\n        </Form>\r\n        <Button variant=\"outline-primary\" block hidden={!isCreate}\r\n         onClick={()=>history.push({pathname:\"/addVolunteer\",state:{group:group}})}>\r\n            add volunteers to your group</Button>\r\n        <Button variant=\"outline-primary\" block hidden={!isCreate} onClick={()=>history.push({pathname:\"/editSchedule/\" + localGroup.id + \"\",state:{group:group}})}>\r\n            edit schedule to your group</Button>\r\n    </div></div >\r\n    )\r\n}\r\n\r\nexport default CreateGroup;\r\n\r\n","C:\\Users\\User\\volunteers\\src\\group\\group.jsx",["131","132"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport serverURL from '../serverURL';\r\nimport Calendar from '../scheduler/calendar2';\r\nconst Group = () => {\r\n        const location = useLocation();\r\n        const [group, setGroup] = useState(location.state.group);\r\n        const [events, setEvents] = useState([]);\r\n        useEffect(async() => {\r\n                const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                        params: {\r\n                                id : group.id,\r\n                        }\r\n                });\r\n                setGroup(result.data);\r\n                setEvents(JSON.parse(result.data.events));\r\n        }, [])\r\n\r\n        return <Calendar group = {group} events={events}/>\r\n}\r\nexport default Group;","C:\\Users\\User\\volunteers\\src\\group\\addVolunteer.jsx",["133","134","135","136","137","138","139","140","141"],"import axios from 'axios';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport serverURL from '../serverURL';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nconst container = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n}\r\nconst AddVolunteer = () => {\r\n\r\n    const [volunteers, setVolunteers] = useState(new Array(10).fill(<Form.Control type=\"email\" placeholder=\"Enter email\" />));\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const formRef = useRef();\r\n    const [group, setGroup] = useState();\r\n    useEffect(() => {\r\n        if (location.state && location.state.group)\r\n            setGroup(location.state.group)\r\n    }, []);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const arr = Array.prototype.slice.call(e.target.children[0].children);\r\n        const volunteers = [];\r\n        arr.map((chaild, index) => {\r\n            if (chaild.value) {\r\n                const email = chaild.value;\r\n                volunteers.push({ email: email });\r\n            }\r\n        });\r\n        axios.post(\"\" + serverURL + \"AddUsers\", {\r\n            list: volunteers,\r\n            group: group\r\n        })\r\n        formRef.current.reset();\r\n    }\r\n    return (<div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <div>\r\n                <h3 style={{ display: \"inline-block\" }}>Add Volunteers</h3>\r\n                <Tooltip title=\"Add\" aria-label=\"add\">\r\n                  \r\n                        <AddCircle style={{float:\"right\"}}/>\r\n                    \r\n                </Tooltip></div>\r\n            <Form ref={formRef} onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                <div className=\"mb-3\">\r\n                    {volunteers.map((element, index) => element)}\r\n                </div>\r\n                <Button type=\"submit\" block >Add all and send email</Button>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default AddVolunteer;","C:\\Users\\User\\volunteers\\src\\scheduler\\SchedulerRow.js",[],"C:\\Users\\User\\volunteers\\src\\serverURL.js",[],"C:\\Users\\User\\volunteers\\src\\demo-data\\appointments.js",[],["142","143"],"C:\\Users\\User\\volunteers\\src\\login\\signUp.jsx",["144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport './login.css';\r\nimport { useFormik } from 'formik';\r\nimport { useHistory } from \"react-router\";\r\nimport axios from 'axios';\r\nimport serverURL from '../serverURL';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory();\r\n    const [matchPassword, setMatchPassword] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [listOfGroups, setListOfGroups] = useState(null);\r\n    const [group, setGroup] = useState();\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            phone: '',\r\n            confirm_password: '',\r\n            group: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            if (matchPassword) {\r\n                const user = {};\r\n                user.name = values.name;\r\n                user.email = values.email;\r\n                user.password = values.password;\r\n                user.phone = values.phone;\r\n                const result = await axios.post(\"\" + serverURL + \"api/User\", {\r\n                    name: user.name,\r\n                    password: user.password,\r\n                    phone: user.phone,\r\n                    email: user.email\r\n                });\r\n                localStorage.setItem(\"user\", JSON.stringify(result.data));\r\n                const groups = await axios.get(\"\" + serverURL + \"GetByManager\", {\r\n                    params: {\r\n                        id: result.data.id,\r\n                    }\r\n                });\r\n                setListOfGroups(groups.data);\r\n                setShow(true);\r\n            }\r\n            else {\r\n                alert(\"the passwords doesnt match\");\r\n            }\r\n        },\r\n\r\n    });\r\n    const changePassword = () => {\r\n        const password = formik.values.password;\r\n        const confirm_password = formik.values.confirm_password;\r\n        if (password && confirm_password && password === confirm_password)\r\n            setMatchPassword(true);\r\n        else setMatchPassword(false);\r\n    }\r\n\r\n    useEffect(changePassword, [formik.values.password, formik.values.confirm_password])\r\n    const submitAllValue = async () => {\r\n        debugger;\r\n        const formikGroup = formik.values.group;\r\n        if (formikGroup === \"create new group\" || !listOfGroups.length) {\r\n            history.push({ pathname: \"/createGroup\", state: { email: formik.values.email } });\r\n        }\r\n        else {\r\n            const index = formikGroup ? listOfGroups.findIndex(g => g.name === formikGroup) : 0;\r\n            const group = listOfGroups[index];\r\n            const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                params: {\r\n                    id: group.id,\r\n                }\r\n            });\r\n            setGroup(result.data);\r\n            localStorage.setItem(\"group\", JSON.stringify(result.data));\r\n            if (result.data.events) {\r\n                setEvents(JSON.parse(result.data.events));\r\n                history.push({ pathname: \"/schedule\", state: { group: result.data, events: JSON.parse(result.data.events) } });\r\n            }\r\n            else {\r\n                setShow(true);\r\n            }\r\n        };\r\n    }\r\n    return (\r\n\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" id=\"name\" name=\"name\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.name} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.email} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\"\r\n                             onChange={formik.handleChange} value={formik.values.password} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>confirm password</label>\r\n                        <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"\r\n                            onChange={formik.handleChange} value={formik.values.confirm_password}\r\n                            className={matchPassword ? \"form-control\" : \"form-control confirm_password_incorrect\"} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Phone</label>\r\n                        <input type=\"text\" id=\"phone\" name=\"phone\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.phone} />\r\n                    </div>\r\n                    <br />\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Create</button>\r\n\r\n                </form>\r\n            </div>\r\n            <Modal show={show} onHide={() => setShow(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>select group</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>select group or create new group</Modal.Body>\r\n                <Modal.Footer>\r\n                    <select className=\"browser-default custom-select\"\r\n                        id=\"group\" name=\"group\" value={formik.values.group} onChange={formik.handleChange}>\r\n                        {listOfGroups ? listOfGroups.map((item, step) =>\r\n                            <option key={step} title={\"manager : \" + item.mName + \"(\" + item.mEmail + \")\"}>\r\n                                {item.name} </option>\r\n                        ) : \"\"}\r\n                        <option key={listOfGroups ? listOfGroups.length : 0}>create new group</option>\r\n                    </select>\r\n\r\n                \r\n                    <Button variant=\"primary\" block onClick={() => submitAllValue()}>Submit</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default SignUp;","C:\\Users\\User\\volunteers\\src\\scheduler\\goodCalendar.jsx",["146","147","148","149","150","151","152","153","154","155","156","157"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport './CalendarStyles.css';\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport   scheduleData from './datasource';\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, popupClose, ResourcesDirective, ResourceDirective, } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport Button from 'react-bootstrap/esm/Button';\r\nconst ownerData = [\r\n    { OwnerText: 'Nancy', Id: 1, OwnerColor: '#ffaa00' },\r\n    { OwnerText: 'Steven', Id: 2, OwnerColor: '#f8a398' },\r\n    { OwnerText: 'Michael', Id: 3, OwnerColor: '#7499e1' }\r\n];\r\nconst arr2 = [];\r\nconst Calendar = (props) => {\r\n    const calendar = useRef(1);\r\n    const getMonthCellContent = (date) => {\r\n        if (date.getMonth() === 10 && date.getDate() === 23) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 9) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/get-together.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 13) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 22) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/thanksgiving-day.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 24) {\r\n            return '<img src=\"https://ej2.syncfusion.com/demos/src/schedule/images/christmas-eve.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 25) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/christmas.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 1) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 14) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        return '';\r\n    }\r\n    const getWorkCellText = (date) => {\r\n        let weekEnds = [0, 6];\r\n        if (weekEnds.indexOf(date.getDay()) >= 0) {\r\n            return \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\";\r\n        }\r\n        return '';\r\n    }\r\n    const cellTemplate = (props) => {\r\n        if (props.type === \"workCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getWorkCellText(props.date) }}></div>);\r\n        }\r\n        if (props.type === \"monthCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getMonthCellContent(props.date) }}></div>);\r\n        }\r\n        return (<div></div>);\r\n    }\r\n    const editorTemplate = (props) => {\r\n        return (props !== undefined ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Summary</td><td colSpan={4}>\r\n                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} disabled={true} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Status</td><td colSpan={4}>\r\n                <DropDownListComponent id=\"EventType\" placeholder='Choose status' data-name=\"EventType\" className=\"e-field\" style={{ width: '100%' }} dataSource={['New', 'Requested', 'Confirmed']} value={props.EventType || null}></DropDownListComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"StartTime\" data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)} className=\"e-field\" disabled={true}></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Reason</td><td colSpan={4}>\r\n                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n            </td></tr></tbody></table> : <div></div>);\r\n    }\r\n    const penPopUp = (args) => {\r\n         debugger;\r\n         \r\n        if(args.data.OwnerId === 2)\r\n        {\r\n            args.data.OwnerId = 1;\r\n            args.cancel = true;\r\n            calendar.current.saveEvent(args.data);\r\n\r\n        } \r\n    }\r\n    return (<>\r\n      \r\n        <ScheduleComponent ref={calendar}  width='100%' height='550px' eventSettings={{ dataSource: scheduleData }} popupOpen={(args) => penPopUp(args)}>\r\n        <ResourcesDirective>\r\n                <ResourceDirective field='OwnerId' title='Owner' name='Owners' allowMultiple={true} dataSource={ownerData} textField='OwnerText' idField='Id' colorField='OwnerColor'>\r\n                </ResourceDirective>\r\n            </ResourcesDirective>\r\n            <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n        </ScheduleComponent></>);\r\n}\r\nexport default Calendar;\r\n","C:\\Users\\User\\volunteers\\src\\scheduler\\datasource.js",[],"C:\\Users\\User\\volunteers\\src\\scheduler\\editScheduer2.jsx",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport axios from \"axios\";\r\nimport serverURL from \"../serverURL\";\r\nimport './CalendarStyles.css'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent, TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\nimport { useContext } from 'react';\r\nimport { UserContext } from \"./../App\"\r\nimport { BsImageFill } from 'react-icons/bs';\r\nimport { Description } from '@material-ui/icons';\r\nconst EditScheduler2 = () => {\r\n  const calendar = useRef();\r\n  const { id } = useParams();\r\n  const [events, setEvents] = useState([]);\r\n  const [newEvents, setNewEvents] = useState([]);\r\n  const [updateEvents, setUpdateEvents] = useState([]);\r\n  const [deletedEvents, setDeletedEvents] = useState([]);\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  useEffect(async () => {\r\n    const result = await axios.get(\"\" + serverURL + \"api/Event/\" + id);\r\n    if (result.data) {\r\n      setEvents(result.data);\r\n    }\r\n  }, []);\r\n\r\n  const sendData = async () => {\r\n    let localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    let localGroup = JSON.parse(localStorage.getItem(\"group\"));\r\n    await axios.post(\"\" + serverURL + \"api/Event\", { events: newEvents, group: localGroup });\r\n    const newUpdate = updateEvents.map(({ Id, OwnerId ,EndTimezone,IsAllDay,RecurrenceRule,StartTimezone ,...allProp }) => allProp);\r\n     await axios.put(\"\" + serverURL + \"UpdateEvents/\", { newUpdate });\r\n    const newDel = deletedEvents.map(({ Id, OwnerId ,...allProp }) => allProp);\r\n    await axios.delete(\"\" + serverURL + \"api/Event\", { data: newDel }, { \"Authorization\": \"***\" });\r\n    const result = await axios.get(\"\" + serverURL + \"api/Event\", { params: { id: localGroup.id } });\r\n    setEvents(result.data);\r\n  }\r\n  const onActionComplete = (args) => {\r\n  \r\n    if (args.addedRecords || args.changedRecords || args.deletedRecords) {\r\n      const data = args.data[0];\r\n      if (args.addedRecords.length > 0) {\r\n        setNewEvents([...newEvents, data]);\r\n        setEvents(calendar.current.eventsData);\r\n        return;\r\n      }\r\n      if (args.changedRecords.length > 0) {\r\n        if (data.id) {\r\n          if (updateEvents.find(e => e.id === data.id)) {\r\n            const index1 = updateEvents.indexOf(updateEvents.find(x => x.Id === data.Id));\r\n            const newUpdateEvents = [...updateEvents];\r\n            newUpdateEvents[index1] = data;\r\n            setUpdateEvents(newUpdateEvents);\r\n          }\r\n          else { setUpdateEvents([...updateEvents, data]) };\r\n        }\r\n        else {\r\n          const currEventsToUpdate = [...newEvents];\r\n          const index = currEventsToUpdate.indexOf(currEventsToUpdate.find(x => x.Id === data.Id));\r\n          currEventsToUpdate[index] = data;\r\n          setNewEvents(currEventsToUpdate);\r\n        }\r\n        return;\r\n      }\r\n      if (args.deletedRecords.length > 0 && data.id) {\r\n        setDeletedEvents([...deletedEvents, data]);\r\n      }\r\n    }\r\n\r\n  }\r\n  const onActionBegin = (args) => {\r\n    if (args.changedRecords) {\r\n      setEvents(calendar.current.eventsData);  \r\n    }\r\n  }\r\n  return (<div><ButtonComponent onClick={() => sendData()} variant=\"link\" > save schedule</ButtonComponent>\r\n    <ScheduleComponent ref={calendar} actionBegin={(args) => onActionBegin(args)} actionComplete={(args) => onActionComplete(args)} width='100%' height='550px' eventSettings={{ dataSource: events }} >\r\n      <Inject services={[Day, Week, WorkWeek, Month]} />\r\n    </ScheduleComponent></div >);\r\n}\r\nexport default EditScheduler2;\r\n","C:\\Users\\User\\volunteers\\src\\scheduler\\chooseEvents.jsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"C:\\Users\\User\\volunteers\\src\\colors.js",[],"C:\\Users\\User\\volunteers\\src\\group\\chhoseGroup.jsx",["190","191","192","193","194","195"],"import axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport serverURL from '../serverURL';\r\nconst ChooseGroup = (props) => {\r\n\r\n    //hear i need have the mail of manager\r\n    return (\r\n        <><Form.Group >\r\n            <Form.Label>select group</Form.Label>\r\n            <Form.Control as=\"select\" id=\"group\" name=\"group\" value={props.group} onChange={()=>props.handleChange()}>\r\n                {props.listOfGroups.map((item, step) =>\r\n                    <option key={step} title={\"manager : \" + item.mName + \"(\" + item.mEmail + \")\"}>\r\n                        {item.name} </option>\r\n                )}\r\n                <option key={props.listOfGroups ? props.listOfGroups.length : 0}>create new group</option>\r\n            </Form.Control>\r\n        </Form.Group><br /> <Button variant=\"primary\" block onClick={() => props.submitAllValue()}>Submit</Button></>\r\n    )}\r\nexport default ChooseGroup;\r\n",["196","197"],"C:\\Users\\User\\volunteers\\src\\group\\chooseColor.jsx",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":18,"column":10,"nodeType":"204","messageId":"205","endLine":18,"endColumn":31},{"ruleId":"202","severity":1,"message":"207","line":19,"column":22,"nodeType":"204","messageId":"205","endLine":19,"endColumn":33},{"ruleId":"202","severity":1,"message":"208","line":20,"column":8,"nodeType":"204","messageId":"205","endLine":20,"endColumn":23},{"ruleId":"202","severity":1,"message":"209","line":21,"column":10,"nodeType":"204","messageId":"205","endLine":21,"endColumn":18},{"ruleId":"202","severity":1,"message":"210","line":24,"column":7,"nodeType":"204","messageId":"205","endLine":24,"endColumn":19},{"ruleId":"202","severity":1,"message":"211","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":29},{"ruleId":"202","severity":1,"message":"212","line":1,"column":31,"nodeType":"204","messageId":"205","endLine":1,"endColumn":40},{"ruleId":"202","severity":1,"message":"213","line":13,"column":73,"nodeType":"204","messageId":"205","endLine":13,"endColumn":83},{"ruleId":"202","severity":1,"message":"214","line":52,"column":20,"nodeType":"204","messageId":"205","endLine":52,"endColumn":29},{"ruleId":"202","severity":1,"message":"215","line":53,"column":19,"nodeType":"204","messageId":"205","endLine":53,"endColumn":27},{"ruleId":"202","severity":1,"message":"216","line":55,"column":11,"nodeType":"204","messageId":"205","endLine":55,"endColumn":30},{"ruleId":"202","severity":1,"message":"217","line":82,"column":11,"nodeType":"204","messageId":"205","endLine":82,"endColumn":26},{"ruleId":"202","severity":1,"message":"218","line":89,"column":11,"nodeType":"204","messageId":"205","endLine":89,"endColumn":23},{"ruleId":"202","severity":1,"message":"219","line":135,"column":15,"nodeType":"204","messageId":"205","endLine":135,"endColumn":16},{"ruleId":"202","severity":1,"message":"211","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":29},{"ruleId":"202","severity":1,"message":"212","line":1,"column":31,"nodeType":"204","messageId":"205","endLine":1,"endColumn":40},{"ruleId":"202","severity":1,"message":"220","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":14},{"ruleId":"202","severity":1,"message":"221","line":18,"column":65,"nodeType":"204","messageId":"205","endLine":18,"endColumn":79},{"ruleId":"202","severity":1,"message":"222","line":18,"column":81,"nodeType":"204","messageId":"205","endLine":18,"endColumn":94},{"ruleId":"202","severity":1,"message":"223","line":19,"column":10,"nodeType":"204","messageId":"205","endLine":19,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":37,"column":30,"nodeType":"226","messageId":"227","endLine":37,"endColumn":63,"fix":"228"},{"ruleId":"198","replacedBy":"229"},{"ruleId":"200","replacedBy":"230"},{"ruleId":"202","severity":1,"message":"231","line":8,"column":17,"nodeType":"204","messageId":"205","endLine":8,"endColumn":28},{"ruleId":"202","severity":1,"message":"232","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":26},{"ruleId":"202","severity":1,"message":"233","line":18,"column":12,"nodeType":"204","messageId":"205","endLine":18,"endColumn":18},{"ruleId":"202","severity":1,"message":"234","line":20,"column":11,"nodeType":"204","messageId":"205","endLine":20,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":67,"column":15,"nodeType":"237","endLine":78,"endColumn":6},{"ruleId":"235","severity":1,"message":"238","line":78,"column":8,"nodeType":"239","endLine":78,"endColumn":10,"suggestions":"240"},{"ruleId":"202","severity":1,"message":"241","line":9,"column":11,"nodeType":"204","messageId":"205","endLine":9,"endColumn":19},{"ruleId":"202","severity":1,"message":"242","line":12,"column":24,"nodeType":"204","messageId":"205","endLine":12,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":10,"column":19,"nodeType":"237","endLine":18,"endColumn":10},{"ruleId":"235","severity":1,"message":"243","line":18,"column":12,"nodeType":"239","endLine":18,"endColumn":14,"suggestions":"244"},{"ruleId":"202","severity":1,"message":"245","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":30},{"ruleId":"202","severity":1,"message":"246","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":15},{"ruleId":"202","severity":1,"message":"247","line":11,"column":8,"nodeType":"204","messageId":"205","endLine":11,"endColumn":11},{"ruleId":"202","severity":1,"message":"248","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":18},{"ruleId":"202","severity":1,"message":"249","line":14,"column":7,"nodeType":"204","messageId":"205","endLine":14,"endColumn":16},{"ruleId":"202","severity":1,"message":"250","line":21,"column":24,"nodeType":"204","messageId":"205","endLine":21,"endColumn":37},{"ruleId":"202","severity":1,"message":"251","line":23,"column":11,"nodeType":"204","messageId":"205","endLine":23,"endColumn":18},{"ruleId":"235","severity":1,"message":"252","line":29,"column":8,"nodeType":"239","endLine":29,"endColumn":10,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":34,"column":33,"nodeType":"237","messageId":"256","endLine":34,"endColumn":35},{"ruleId":"198","replacedBy":"257"},{"ruleId":"200","replacedBy":"258"},{"ruleId":"202","severity":1,"message":"259","line":16,"column":12,"nodeType":"204","messageId":"205","endLine":16,"endColumn":17},{"ruleId":"202","severity":1,"message":"233","line":17,"column":12,"nodeType":"204","messageId":"205","endLine":17,"endColumn":18},{"ruleId":"202","severity":1,"message":"211","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":29},{"ruleId":"202","severity":1,"message":"212","line":1,"column":31,"nodeType":"204","messageId":"205","endLine":1,"endColumn":40},{"ruleId":"202","severity":1,"message":"260","line":1,"column":50,"nodeType":"204","messageId":"205","endLine":1,"endColumn":58},{"ruleId":"202","severity":1,"message":"213","line":14,"column":73,"nodeType":"204","messageId":"205","endLine":14,"endColumn":83},{"ruleId":"202","severity":1,"message":"261","line":17,"column":10,"nodeType":"204","messageId":"205","endLine":17,"endColumn":20},{"ruleId":"202","severity":1,"message":"207","line":17,"column":22,"nodeType":"204","messageId":"205","endLine":17,"endColumn":33},{"ruleId":"202","severity":1,"message":"220","line":18,"column":8,"nodeType":"204","messageId":"205","endLine":18,"endColumn":14},{"ruleId":"202","severity":1,"message":"262","line":24,"column":7,"nodeType":"204","messageId":"205","endLine":24,"endColumn":11},{"ruleId":"202","severity":1,"message":"216","line":27,"column":11,"nodeType":"204","messageId":"205","endLine":27,"endColumn":30},{"ruleId":"202","severity":1,"message":"217","line":54,"column":11,"nodeType":"204","messageId":"205","endLine":54,"endColumn":26},{"ruleId":"202","severity":1,"message":"218","line":61,"column":11,"nodeType":"204","messageId":"205","endLine":61,"endColumn":23},{"ruleId":"202","severity":1,"message":"263","line":70,"column":11,"nodeType":"204","messageId":"205","endLine":70,"endColumn":25},{"ruleId":"202","severity":1,"message":"211","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":29},{"ruleId":"202","severity":1,"message":"220","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"221","line":18,"column":65,"nodeType":"204","messageId":"205","endLine":18,"endColumn":79},{"ruleId":"202","severity":1,"message":"222","line":18,"column":81,"nodeType":"204","messageId":"205","endLine":18,"endColumn":94},{"ruleId":"202","severity":1,"message":"223","line":19,"column":10,"nodeType":"204","messageId":"205","endLine":19,"endColumn":31},{"ruleId":"202","severity":1,"message":"264","line":20,"column":10,"nodeType":"204","messageId":"205","endLine":20,"endColumn":33},{"ruleId":"202","severity":1,"message":"265","line":20,"column":35,"nodeType":"204","messageId":"205","endLine":20,"endColumn":54},{"ruleId":"202","severity":1,"message":"207","line":21,"column":10,"nodeType":"204","messageId":"205","endLine":21,"endColumn":21},{"ruleId":"202","severity":1,"message":"261","line":21,"column":23,"nodeType":"204","messageId":"205","endLine":21,"endColumn":33},{"ruleId":"202","severity":1,"message":"266","line":24,"column":10,"nodeType":"204","messageId":"205","endLine":24,"endColumn":21},{"ruleId":"202","severity":1,"message":"267","line":25,"column":10,"nodeType":"204","messageId":"205","endLine":25,"endColumn":21},{"ruleId":"202","severity":1,"message":"268","line":33,"column":11,"nodeType":"204","messageId":"205","endLine":33,"endColumn":15},{"ruleId":"202","severity":1,"message":"269","line":33,"column":17,"nodeType":"204","messageId":"205","endLine":33,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":35,"column":13,"nodeType":"237","endLine":40,"endColumn":4},{"ruleId":"235","severity":1,"message":"270","line":40,"column":6,"nodeType":"239","endLine":40,"endColumn":8,"suggestions":"271"},{"ruleId":"202","severity":1,"message":"272","line":43,"column":9,"nodeType":"204","messageId":"205","endLine":43,"endColumn":18},{"ruleId":"202","severity":1,"message":"211","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":29},{"ruleId":"202","severity":1,"message":"273","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":20},{"ruleId":"202","severity":1,"message":"213","line":16,"column":73,"nodeType":"204","messageId":"205","endLine":16,"endColumn":83},{"ruleId":"202","severity":1,"message":"223","line":17,"column":10,"nodeType":"204","messageId":"205","endLine":17,"endColumn":31},{"ruleId":"202","severity":1,"message":"264","line":18,"column":10,"nodeType":"204","messageId":"205","endLine":18,"endColumn":33},{"ruleId":"202","severity":1,"message":"261","line":19,"column":10,"nodeType":"204","messageId":"205","endLine":19,"endColumn":20},{"ruleId":"202","severity":1,"message":"207","line":19,"column":22,"nodeType":"204","messageId":"205","endLine":19,"endColumn":33},{"ruleId":"202","severity":1,"message":"220","line":20,"column":8,"nodeType":"204","messageId":"205","endLine":20,"endColumn":14},{"ruleId":"202","severity":1,"message":"274","line":24,"column":10,"nodeType":"204","messageId":"205","endLine":24,"endColumn":27},{"ruleId":"202","severity":1,"message":"275","line":25,"column":7,"nodeType":"204","messageId":"205","endLine":25,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":44,"column":13,"nodeType":"237","endLine":49,"endColumn":4},{"ruleId":"235","severity":1,"message":"270","line":49,"column":6,"nodeType":"239","endLine":49,"endColumn":8,"suggestions":"276"},{"ruleId":"235","severity":1,"message":"236","line":50,"column":13,"nodeType":"237","endLine":62,"endColumn":4},{"ruleId":"235","severity":1,"message":"277","line":62,"column":6,"nodeType":"239","endLine":62,"endColumn":8,"suggestions":"278"},{"ruleId":"235","severity":1,"message":"279","line":67,"column":5,"nodeType":"239","endLine":67,"endColumn":12,"suggestions":"280"},{"ruleId":"202","severity":1,"message":"281","line":72,"column":11,"nodeType":"204","messageId":"205","endLine":72,"endColumn":14},{"ruleId":"202","severity":1,"message":"282","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"283","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"260","line":3,"column":17,"nodeType":"204","messageId":"205","endLine":3,"endColumn":25},{"ruleId":"202","severity":1,"message":"261","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":20},{"ruleId":"202","severity":1,"message":"207","line":6,"column":22,"nodeType":"204","messageId":"205","endLine":6,"endColumn":33},{"ruleId":"202","severity":1,"message":"284","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":17},{"ruleId":"198","replacedBy":"285"},{"ruleId":"200","replacedBy":"286"},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'Scheduler' is defined but never used.","Identifier","unusedVar","'SignalWifiOffOutlined' is defined but never used.","'useLocation' is defined but never used.","'CSS_COLOR_NAMES' is defined but never used.","'Dropdown' is defined but never used.","'groupContext' is assigned a value but never used.","'cloneElement' is defined but never used.","'useEffect' is defined but never used.","'popupClose' is defined but never used.","'setEvents' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'getMonthCellContent' is assigned a value but never used.","'getWorkCellText' is assigned a value but never used.","'cellTemplate' is assigned a value but never used.","'t' is assigned a value but never used.","'Button' is defined but never used.","'ViewsDirective' is defined but never used.","'ViewDirective' is defined but never used.","'DropDownListComponent' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['events'] found.","Property","unnecessarilyComputedProperty",{"range":"289","text":"290"},["287"],["288"],"'useCallback' is defined but never used.","'useLocationState' is defined but never used.","'events' is assigned a value but never used.","'list' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["291"],"'location' is assigned a value but never used.","'setLocalUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'group.id'. Either include it or remove the dependency array.",["292"],"'BsFillPlusCircleFill' is defined but never used.","'AddIcon' is defined but never used.","'Fab' is defined but never used.","'IconButton' is defined but never used.","'container' is assigned a value but never used.","'setVolunteers' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["293"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["287"],["288"],"'group' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'arr2' is assigned a value but never used.","'editorTemplate' is assigned a value but never used.","'DateTimePickerComponent' is defined but never used.","'TimePickerComponent' is defined but never used.","'BsImageFill' is defined but never used.","'Description' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["294"],"'localUser' is assigned a value but never used.","'scheduleData' is defined but never used.","'validateYupSchema' is defined but never used.","'ownerData' is assigned a value but never used.",["295"],"React Hook useEffect has missing dependencies: 'localGroup.id', 'localUser.id', and 'localUser.name'. Either include them or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'localUser.id' and 'localUser.name'. Either include them or remove the dependency array.",["297"],"'res' is assigned a value but never used.","'axios' is defined but never used.","'useFormik' is defined but never used.","'serverURL' is defined but never used.",["287"],["288"],"no-global-assign","no-unsafe-negation",[1963,1973],"'events'",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [location]",{"range":"311","text":"312"},"Update the dependencies array to be: [group.id]",{"range":"313","text":"314"},"Update the dependencies array to be: [location.state]",{"range":"315","text":"316"},"Update the dependencies array to be: [id]",{"range":"317","text":"318"},{"range":"319","text":"318"},"Update the dependencies array to be: [localGroup.id, localUser.id, localUser.name]",{"range":"320","text":"321"},"Update the dependencies array to be: [color, localUser.id, localUser.name]",{"range":"322","text":"323"},[3104,3106],"[location]",[752,754],"[group.id]",[1195,1197],"[location.state]",[2151,2153],"[id]",[2551,2553],[3068,3070],"[localGroup.id, localUser.id, localUser.name]",[3319,3326],"[color, localUser.id, localUser.name]"]