[{"C:\\Users\\ilani\\project\\volunteers\\src\\index.js":"1","C:\\Users\\ilani\\project\\volunteers\\src\\App.js":"2","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\Scheduler.js":"3","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\SchedulerRow.js":"4","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendar.jsx":"5","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\weekCalender.jsx":"6","C:\\Users\\ilani\\project\\volunteers\\src\\login\\SignIn.jsx":"7","C:\\Users\\ilani\\project\\volunteers\\src\\serverURL.js":"8","C:\\Users\\ilani\\project\\volunteers\\src\\group\\create_group.jsx":"9","C:\\Users\\ilani\\project\\volunteers\\src\\group\\group.jsx":"10","C:\\Users\\ilani\\project\\volunteers\\src\\group\\addVolunteer.jsx":"11","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendarFunc.jsx":"12","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendar2.jsx":"13","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendarDevExpress.jsx":"14","C:\\Users\\ilani\\project\\volunteers\\src\\demo-data\\today-appointments.js":"15","C:\\Users\\ilani\\project\\volunteers\\src\\demo-data\\appointments.js":"16","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendar3.jsx":"17","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\datasource.js":"18","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\editScheduler.jsx":"19"},{"size":312,"mtime":1613403104734,"results":"20","hashOfConfig":"21"},{"size":1002,"mtime":1615306316419,"results":"22","hashOfConfig":"21"},{"size":3116,"mtime":1612955894628,"results":"23","hashOfConfig":"21"},{"size":173,"mtime":1611842540000,"results":"24","hashOfConfig":"21"},{"size":3378,"mtime":1613556923821,"results":"25","hashOfConfig":"21"},{"size":897,"mtime":1612957732333,"results":"26","hashOfConfig":"21"},{"size":7333,"mtime":1615453774059,"results":"27","hashOfConfig":"21"},{"size":72,"mtime":1613311729278,"results":"28","hashOfConfig":"21"},{"size":2584,"mtime":1615307205736,"results":"29","hashOfConfig":"21"},{"size":843,"mtime":1615129468692,"results":"30","hashOfConfig":"21"},{"size":2923,"mtime":1615463348030,"results":"31","hashOfConfig":"21"},{"size":6213,"mtime":1613914998762,"results":"32","hashOfConfig":"21"},{"size":9489,"mtime":1615468547491,"results":"33","hashOfConfig":"21"},{"size":5730,"mtime":1614849549229,"results":"34","hashOfConfig":"21"},{"size":847,"mtime":1614077371526,"results":"35","hashOfConfig":"21"},{"size":7595,"mtime":1614077320007,"results":"36","hashOfConfig":"21"},{"size":1497,"mtime":1614856922176,"results":"37","hashOfConfig":"21"},{"size":463,"mtime":1614856928346,"results":"38","hashOfConfig":"21"},{"size":4305,"mtime":1615472058621,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"z22r3d",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\ilani\\project\\volunteers\\src\\index.js",[],["92","93"],"C:\\Users\\ilani\\project\\volunteers\\src\\App.js",["94","95"],"import React from 'react'\n\nimport Scheduler from './scheduler/Scheduler';\nimport Calendar from './scheduler/calendar2';\nimport SignIn from './login/SignIn'\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport CreateGroup from './group/create_group';\nimport Group from './group/group';\nimport AddVolunteer from './group/addVolunteer';\nimport Demo from './scheduler/calendarDevExpress';\nimport EditScheduler from \"./scheduler/editScheduler\";\n\n//import WeekCalender from './scheduler/weekCalender';\nconst App = () => {\n\n  return (\n    <>\n      <Link to=\"/signin\">SignIn</Link>\n      <Switch>\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/createGroup\" component={CreateGroup} />\n        <Route path=\"/group\" component={Group} />\n        <Route path=\"/addVolunteer\" component={AddVolunteer} />\n        <Route path=\"/schedule\" component={Calendar}/>\n        <Route path=\"/editSchedule\" component={EditScheduler}/>\n      </Switch>\n    </>\n  )\n\n}\nexport default App;","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\Scheduler.js",[],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\SchedulerRow.js",[],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendar.jsx",[],["96","97"],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\weekCalender.jsx",["98"],"import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { ScheduleComponent, WorkWeek, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { appData } from './datasource';\r\nimport { extend } from '@syncfusion/ej2-base';\r\nclass WeekCalender extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.data = extend([], appData, null, true);\r\n        this.workDays = [2, 3, 5];\r\n    }\r\n    render() {\r\n        return <ScheduleComponent width='100%' height='550px' selectedDate={new Date(2018, 1, 15)} eventSettings={{ dataSource: this.data }}>\r\n      <ViewsDirective>\r\n        <ViewDirective option='WorkWeek' workDays={this.workDays}/>\r\n      </ViewsDirective>\r\n      <Inject services={[WorkWeek]}/>\r\n    </ScheduleComponent>;\r\n    }\r\n}\r\nexport default WeekCalender;",["99","100"],"C:\\Users\\ilani\\project\\volunteers\\src\\login\\SignIn.jsx",["101","102","103","104"],"import { Link, useHistory } from 'react-router-dom';\r\nimport './login.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport serverURL from '../serverURL';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nconst SignIn = (props) => {\r\n    const history = useHistory();\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [listOfGroups, setListOfGroups] = useState(null);\r\n    const [group, setGroup] = useState();\r\n    const [events, setEvents] = useState([]);\r\n    const [show ,setShow] =useState(false);\r\n    const list = useRef();\r\n    const handleShow = () => { setShow(true)}\r\n    const handleClose = () => { setShow(false)}\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            group: '',\r\n            emailValid: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            const email = values.email\r\n            if (email === \"\") {\r\n                formik.values.emailValid = \"please type email\";\r\n            }\r\n            else {\r\n\r\n                formik.values.emailValid = \"\";\r\n                const password = values.password;\r\n                //get the group for this user\r\n                const result = await axios.get(\"\" + serverURL + \"api/User\", {\r\n                    params: {\r\n                        email: email,\r\n                        password: password\r\n                    }\r\n                });\r\n\r\n\r\n                console.log(result);\r\n                // if (result.data.err) {\r\n                //     history.push({ pathname: '/error', state: { status: result.data.status } });\r\n                //     return;\r\n                // }\r\n\r\n                if (result.data) {\r\n                    let user = result.data;\r\n                    if (user.email && user.password) {\r\n                        //paste hear\r\n                        user = JSON.stringify(user);\r\n                        ////save the user in the storage\r\n                        //go to choose group\r\n                        const groups = await axios.get(\"\" + serverURL + \"GetByManager\", {\r\n                            params: {\r\n                                id: result.data.id,\r\n                            }\r\n                        });\r\n                        setListOfGroups(groups.data);\r\n                        setIsLogin(true);\r\n                    }\r\n                    if (user.email && !user.password) {\r\n                        user.password = password;\r\n                        history.push({ pathname: \"/signup\", state: user });\r\n\r\n                    }\r\n                }\r\n                else alert(\"your email or password is incorrect\");\r\n            }\r\n        },\r\n    });\r\n\r\n    const submitAllValue = async () => {\r\n        const formikGroup = formik.values.group;\r\n        if (formikGroup === \"create new group\" || !listOfGroups) {\r\n            history.push({ pathname: \"/createGroup\", state: { email: formik.values.email } });\r\n        }\r\n        else {\r\n            const index = formikGroup ? listOfGroups.findIndex(g => g.name === formikGroup) : 0;\r\n            const group = listOfGroups[index];\r\n            const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                params: {\r\n                    id: group.id,\r\n                }\r\n            });\r\n            setGroup(result.data);\r\n            if (result.data.events) {\r\n                setEvents(JSON.parse(result.data.events));\r\n                history.push({ pathname: \"/schedule\", state: { group: result.data, events: JSON.parse(result.data.events) } });\r\n            }\r\n            else {\r\n                handleShow();\r\n            }\r\n            //history.push({pathname:\"/group\",state:{group:listOfGroups[index]}});\r\n        };\r\n    }\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => history.push(\"/\")} >\r\n                        <span aria-hidden=\"true\" >&times;</span>\r\n                    </button><br />\r\n                    <h3>Sign In</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.email} disabled={isLogin} />\r\n                        <span id=\"emailValid\" className=\"validMassage\">{formik.values.emailValid}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label><Button variant=\"link\" > (forget password)</Button>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\"\r\n                            onChange={formik.handleChange} value={formik.values.password} disabled={isLogin} />\r\n                    </div>\r\n                    {!isLogin ? <><br /><div className=\"form-group\">\r\n                        <Button type=\"submit\" variant=\"outline-primary\" block>Continue...</Button>\r\n                    </div></> : \"\"}\r\n                    {isLogin ?\r\n                        <><Form.Group >\r\n                            <Form.Label>select group</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"group\" name=\"group\" value={formik.values.group} onChange={formik.handleChange}>\r\n                                {listOfGroups.map((item, step) =>\r\n                                    <option key={step} title={\"manager : \" + item.mName + \"(\" + item.mEmail + \")\"}>\r\n                                        {item.name} </option>\r\n                                )}\r\n                                <option key={listOfGroups ? listOfGroups.length : 0}>create new group</option>\r\n                            </Form.Control>\r\n                        </Form.Group><br /> <Button variant=\"primary\" block onClick={() => submitAllValue()}>Submit</Button></> : \"\"}\r\n                </form>\r\n\r\n            </div><br />\r\n            <div className=\"auth-inner\">\r\n                <h5>New in courseries - <Link to=\"/\"> Create Account</Link></h5>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Choose what do yo want to do with your group</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>you till dont declare the schedule to your group</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>history.push({pathname:\"/editSchedule\",state:{group:group}})}>\r\n                        Edit Schedule\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={()=>history.push({pathname:\"/addVolunteer\",state:{group:group}})}>\r\n                        Add volunteers\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default SignIn;","C:\\Users\\ilani\\project\\volunteers\\src\\serverURL.js",[],"C:\\Users\\ilani\\project\\volunteers\\src\\group\\create_group.jsx",[],"C:\\Users\\ilani\\project\\volunteers\\src\\group\\group.jsx",["105","106"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport serverURL from '../serverURL';\r\nimport Calendar from '../scheduler/calendar2';\r\nconst Group = () => {\r\n        const location = useLocation();\r\n        const [group, setGroup] = useState(location.state.group);\r\n        const [events, setEvents] = useState([]);\r\n        useEffect(async() => {\r\n                const result = await axios.get(\"\" + serverURL + \"api/Group\", {\r\n                        params: {\r\n                                id : group.id,\r\n                        }\r\n                });\r\n                setGroup(result.data);\r\n                setEvents(JSON.parse(result.data.events));\r\n        }, [])\r\n\r\n        return <Calendar group = {group} events={events}/>\r\n}\r\nexport default Group;","C:\\Users\\ilani\\project\\volunteers\\src\\group\\addVolunteer.jsx",["107","108","109","110","111"],"import axios from 'axios';\r\nimport React, { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport serverURL from '../serverURL';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nconst container = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n}\r\nconst AddVolunteer = () => {\r\n\r\n    const [volunteers, setVolunteers] = useState([]);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const formRef = useRef();\r\n    const [group, setGroup] = useState(location.state.group);\r\n    const setStateOfVolunteers = (e, i) => {\r\n        if (e.target.id === \"email\") {\r\n\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    const EditSchedule = () => {\r\n        history.push({ pathname: \"/schedule\", state: { group: group, edit: true } });\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const arr = Array.prototype.slice.call(e.target.children[0].children);\r\n        const volunteers = [];\r\n        arr.map((chaild, index) => {\r\n            if (index % 2 === 0 && chaild.children[1].value.length > 0) {\r\n                const name = chaild.children[0].value;\r\n                const email = chaild.children[1].value;\r\n                volunteers.push({ name: name, email: email });\r\n            }\r\n        });\r\n        axios.post(\"\" + serverURL + \"AddUsers\", {\r\n            list: volunteers,\r\n            group: group\r\n        })\r\n        formRef.current.reset();\r\n    }\r\n    return (<div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n            <h3>Add Volunteers</h3><br />\r\n            <form ref={formRef} onSubmit={(e) => handleSubmit(e)}>\r\n                <ul>\r\n                    {(() => {\r\n                        const inputs = [];\r\n                        for (let i = 0; i < 5; i++) {\r\n                            volunteers.push({ name: \"\", email: \"\" });\r\n                            inputs.push(<><li key={i} className=\"container\" style={container}>\r\n                                <input type=\"text\" placeholder=\"name\" id=\"name\" />\r\n                                <input type=\"email\" id=\"email\" placeholder=\"email\" />\r\n                                <label>send email</label><input type=\"checkbox\" id=\"sendEmail\"/>\r\n                            </li><br /></>);\r\n                        }\r\n                        return inputs;\r\n                    })()}\r\n                </ul>\r\n\r\n\r\n                <Button type=\"submit\" block>Add all</Button>\r\n                <Button block onClick={() => EditSchedule()}>Edit schedule</Button>\r\n                <Button block disabled={!group.events}\r\n                    onClick={history.push({ pathname: \"/schedule\", state: { group: group, events: JSON.parse(group.events) } })}>schedule</Button>\r\n            </form></div></div>\r\n    );\r\n}\r\nexport default AddVolunteer;","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendarFunc.jsx",["112","113","114","115","116","117","118"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { DayPilot, DayPilotCalendar, DayPilotNavigator } from \"daypilot-pro-react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport \"./CalendarStyles.css\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../serverURL\";\r\n\r\nconst styles = {\r\n    wrap: {\r\n        display: \"flex\"\r\n    },\r\n    left: {\r\n        marginRight: \"10px\"\r\n    },\r\n    main: {\r\n        flexGrow: \"1\"\r\n    }\r\n};\r\nconst cells = [\r\n    {\r\n        start: \"2021-09-17T10:30:00\",\r\n        end: \"2021-09-17T13:00:00\",\r\n    },\r\n    {\r\n        start: \"2021-09-15T10:30:00\",\r\n        end: \"2021-09-15T13:00:00\",\r\n    },\r\n    {\r\n        start: \"2021-09-16T10:30:00\",\r\n        end: \"2021-09-16T13:00:00\",\r\n    },\r\n]\r\n\r\nconst Calendar = (props) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const location = useLocation();\r\n    const [times ,setTimes] = useState(props.events)\r\n    const [group, setGroup] = useState(location.state.group);\r\n\r\n    useEffect(() => {\r\n        if (location.state && location.state.edit)\r\n            setIsEdit(true);\r\n    }, [])\r\n    \r\n    const [style, setStyle] = useState({\r\n        viewType: \"Week\",\r\n        durationBarVisible: false,\r\n        timeRangeSelectedHandling: \"Enabled\",\r\n        onTimeRangeSelected: args => {\r\n            let dp = calendar.current;\r\n            if (location.state.edit) {\r\n                dp.clearSelection();\r\n                dp.events.add(new DayPilot.Event({\r\n                    start: args.start,\r\n                    end: args.end,\r\n                    id: DayPilot.guid(),\r\n                    text: args.start.getHours() + \":\" + (args.start.getMinutes() ? args.start.getMinutes() : \"00\") + \" - \" +\r\n                        args.end.getHours() + \":\" + (args.end.getMinutes() ? args.end.getMinutes() : \"00\")\r\n                }));\r\n            }\r\n            else {\r\n                DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\r\n                    dp.clearSelection();\r\n                    if (!modal.result) { return; }\r\n                    dp.events.add(new DayPilot.Event({\r\n                        start: args.start,\r\n                        end: args.end,\r\n                        id: DayPilot.guid(),\r\n                        text: modal.result\r\n                    }));\r\n                });\r\n            }\r\n\r\n        }, startDate: '2021-09-15',\r\n        events: [...props.events],\r\n        // events: [{\r\n        //     id: 1,\r\n        //     text: \"Event 1\",\r\n        //     start: \"2021-09-13T10:30:00\",\r\n        //     end: \"2021-09-13T13:00:00\",\r\n        //     moveDisabled: true,\r\n        //     clickDisabled: true,\r\n        //     resizeDisabled: true,\r\n        //     deleteDisabled: true,\r\n        // },\r\n        // {\r\n        //     id: 2,\r\n        //     text: \"Event 2\",\r\n        //     start: \"2021-09-14T09:30:00\",\r\n        //     end: \"2021-09-14T11:30:00\",\r\n        //     backColor: \"#38761d\"\r\n        // },\r\n        // {\r\n        //     id: 2,\r\n        //     text: \"Event 3\",\r\n        //     start: \"2021-09-14T12:00:00\",\r\n        //     end: \"2021-09-14T15:00:00\",\r\n        //     backColor: \"#cc4125\"\r\n        // }],\r\n        eventDeleteHandling: \"Update\",\r\n        onEventClick: args => {\r\n            let dp = calendar.current;\r\n            DayPilot.Modal.prompt(\"Update event text:\", args.e.text()).then(function (modal) {\r\n                if (!modal.result) { return; }\r\n                console.log(args);\r\n                args.e.data.text = modal.result;\r\n                dp.events.update(args.e);\r\n            });\r\n        },\r\n        onBeforeCellRender: args => {\r\n             if (cells.filter(c => args.cell.start >= c.start && args.cell.end <= c.end).length > 0) {\r\n                 args.cell.backColor = \"#a0e1ec\";\r\n             }\r\n             else {\r\n                 args.cell.disabled = true;\r\n             }\r\n        },\r\n        onEventEdited: args => {\r\n            console.log(\"event edit\", args);\r\n        }\r\n    });\r\n    useEffect(() => {        \r\n        console.log(props.events);\r\n        setTimes(props.events);\r\n        if(calendar.current && props.events.length >0)\r\n        {\r\n            calendar.current.cellProperties[\"0_25\"].backColor=\"red\";\r\n            console.log( calendar.current.cellProperties[\"0_25\"].backColor);\r\n            calendar.current.cellProperties[\"3_25\"].backColor = \"blue\"\r\n            console.log( calendar.current.cellProperties[\"0_25\"].start);\r\n        }\r\n        \r\n        // setStyle({...style, \r\n        //     events:props.events.slice() \r\n        // });\r\n    }, [props.events])\r\n    //const [events, setEvents] = useState([])\r\n    //const [startDate, setStartDate] = useState(\"2021-09-15\");\r\n    const calendar = useRef(null);\r\n    // useEffect(() => {\r\n    //setEvents();\r\n    // setStartDate('2021-09-10')\r\n    // }, [])\r\n    const Paint = () => {\r\n        const start = \"2021-09-15T12:00:00\";\r\n        const end = \"2021-09-15T15:00:00\";\r\n        //  calendar.current.Row.cells.forRange(start, end).backColor = \"red\";\r\n    }\r\n    const sendEventsToDb = async () => {\r\n        const result = await axios.put(\"\" + serverURL + \"api/Event\", {\r\n            events: calendar.current.events.list,\r\n            group: group\r\n        });\r\n        console.log(result);\r\n    }\r\n    return (\r\n        <div style={styles.wrap}>\r\n            <div style={styles.left}>\r\n                <DayPilotNavigator\r\n                    selectMode={\"week\"}\r\n                    showMonths={3}\r\n                    skipMonths={3}\r\n                //onTimeRangeSelected={args => {\r\n                //    setStartDate(args.day)\r\n                //}}\r\n                />\r\n            </div>\r\n            <div style={styles.main}>\r\n                <DayPilotCalendar\r\n\r\n                    {...style}\r\n                    // {...events}\r\n\r\n                    ref={component => {\r\n                        calendar.current = component && component.control;\r\n                    }}\r\n\r\n                />\r\n            </div>\r\n            <button onClick={() => Paint()}>Paint cells</button>\r\n            <button onClick={() => sendEventsToDb()}>calender</button>\r\n        </div>)\r\n}\r\nexport default Calendar;",["119","120"],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendar2.jsx",["121","122","123","124","125","126","127","128","129"],"import React, { cloneElement, useEffect, useRef, useState } from 'react';\r\nimport './CalendarStyles.css';\r\nimport \"../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"../../node_modules/@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, popupClose } from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport Button from 'react-bootstrap/esm/Button';\r\nconst arr1 = [\r\n    {\r\n        start: \"Sun Mar 07 2021 19:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sun Mar 07 2021 20:00:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Sun Mar 07 2021 21:30:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sun Mar 07 2021 23:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Wed Mar 10 2021 21:30:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Wed Mar 10 2021 23:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Sat Mar 13 2021 21:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Sat Mar 13 2021 22:00:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n    {\r\n        start: \"Thu Mar 11 2021 21:00:00 GMT+0200 (שעון ישראל (חורף))\",\r\n        end: \"Thu Mar 11 2021 22:30:00 GMT+0200 (שעון ישראל (חורף))\"\r\n    }\r\n    ,\r\n]\r\nconst arr2 = [];\r\nconst Calendar = (props) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const calendar = useRef()\r\n    const first = useRef(false);\r\n    const [time, setTime] = useState(0);\r\n    const [events, setEvents] = useState(location.state.events);\r\n    const [group, setGroup] = useState(location.state.group);\r\n    \r\n    const getMonthCellContent = (date) => {\r\n        if (date.getMonth() === 10 && date.getDate() === 23) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 9) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/get-together.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 13) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 22) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/thanksgiving-day.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 24) {\r\n            return '<img src=\"https://ej2.syncfusion.com/demos/src/schedule/images/christmas-eve.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 25) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/christmas.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 1) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg\" />';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 14) {\r\n            return '<img src= \"https://ej2.syncfusion.com/demos/src/schedule/images/birthday.svg\" />';\r\n        }\r\n        return '';\r\n    }\r\n    const getWorkCellText = (date) => {\r\n        let weekEnds = [0, 6];\r\n        if (weekEnds.indexOf(date.getDay()) >= 0) {\r\n            return \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\";\r\n        }\r\n        return '';\r\n    }\r\n    const cellTemplate = (props) => {\r\n        if (props.type === \"workCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getWorkCellText(props.date) }}></div>);\r\n        }\r\n        if (props.type === \"monthCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getMonthCellContent(props.date) }}></div>);\r\n        }\r\n        return (<div></div>);\r\n    }\r\n    const sortArr = () => {\r\n        for (let index = 0; index < events.length; index++) {\r\n\r\n            let dt = new Date(events[index].StartTime);\r\n            let dtEnd = new Date(events[index].EndTime);\r\n            while (dt < dtEnd) {\r\n                arr2.push(dt);\r\n                dt = new Date(dt);\r\n                dt.setMinutes(dt.getMinutes() + 30);\r\n            }\r\n        }\r\n        for (let i = 0; i < arr2.length; i++) {\r\n\r\n            for (let j = i + 1; j < arr2.length; j++) {\r\n\r\n                if (arr2[i].getHours() > arr2[j].getHours()) {\r\n                    //if (start.getMinutes() > end.getHours()\r\n                    [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                }\r\n                else if (arr2[i].getHours() === arr2[j].getHours()) {\r\n                    if (arr2[i].getMinutes() > arr2[j].getMinutes()) {\r\n                        [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                    }\r\n                    else if (arr2[i].getMinutes() === arr2[j].getMinutes()) {\r\n                        if (arr2[i].getDay() > arr2[j].getDay()) {\r\n                            [arr2[i], arr2[j]] = [arr2[j], arr2[i]];\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    const onRenderCell = (e) => {\r\n        if (!first.current) { setTime(performance.now()); sortArr(); first.current = true; console.log(arr1) }\r\n        // console.log(e.date ? e.date : \"null\");\r\n        const t = performance.now();\r\n        console.log(e.date);\r\n        if (arr2.length && e.date) {\r\n            if (Date.parse(e.date) === Date.parse(arr2[0])) {\r\n                e.element.classList.add(\"my-cell\");\r\n                arr2.shift();\r\n            }\r\n            else {\r\n                //e.onClick = handleDisabled;\r\n            }\r\n        }\r\n        if (e.date && e.date.getDay() === 6 && e.date.getHours() === 23) {\r\n            const t = performance.now() - time;\r\n            console.log(t);\r\n        }\r\n    }\r\n    const editorTemplate = (props) => {\r\n        return (props !== undefined ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Summary</td><td colSpan={4}>\r\n                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} disabled={true} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Status</td><td colSpan={4}>\r\n                <DropDownListComponent id=\"EventType\" placeholder='Choose status' data-name=\"EventType\" className=\"e-field\" style={{ width: '100%' }} dataSource={['New', 'Requested', 'Confirmed']} value={props.EventType || null}></DropDownListComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">From</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"StartTime\" data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)} className=\"e-field\" disabled={true}></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td colSpan={4}>\r\n                <DateTimePickerComponent format='dd/MM/yy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Reason</td><td colSpan={4}>\r\n                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n            </td></tr></tbody></table> : <div></div>);\r\n    }\r\n    const penPopUp = (args) => {\r\n        if (![...args.target.classList].includes(\"my-cell\")) {\r\n            args.cancel = true;\r\n        }\r\n    }\r\n    const click = () => {\r\n        console.log(calendar.current);\r\n        console.log(calendar.current);\r\n    }\r\n    return (<>\r\n        <div ><Button variant=\"link\" onClick={() => history.push({ pathname: \"/addVolunteer\", state: { group: group } })}>Add Volunteers</Button>\r\n            <Button variant=\"link\" onClick={() => history.push({ pathname: \"/editSchedule\", state: { group: group } })}>Edit Schedule</Button></div>\r\n        <ScheduleComponent ref={calendar} renderCell={(e) => onRenderCell(e)} width='100%' height='550px'\r\n            editorTemplate={(e) => editorTemplate(e)} popupOpen={(args) => penPopUp(args)}>\r\n            <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n        </ScheduleComponent><button onClick={() => click()}></button></>);\r\n}\r\nexport default Calendar;\r\n","C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendarDevExpress.jsx",[],"C:\\Users\\ilani\\project\\volunteers\\src\\demo-data\\today-appointments.js",[],["130","131"],"C:\\Users\\ilani\\project\\volunteers\\src\\demo-data\\appointments.js",[],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\calendar3.jsx",["132","133","134"],"\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { ScheduleComponent, Day, Week, Month, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { extend, createElement } from '@syncfusion/ej2-base';\r\nimport scheduleData  from './datasource';\r\nclass Calendar extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.data = extend([], scheduleData, null, true);\r\n    }\r\n    onRenderCell(args) {\r\n        if (args.elementType == 'workCells' || args.elementType == 'monthCells') {\r\n            let weekEnds = [0, 6];\r\n            if (weekEnds.indexOf((args.date).getDay()) >= 0) {\r\n                let ele = createElement('div', {\r\n                    innerHTML: \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\",\r\n                    className: 'templatewrap'\r\n                });\r\n                (args.element).appendChild(ele);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return <ScheduleComponent height='550px' currentView='Month' selectedDate={new Date(2018, 1, 15)} eventSettings={{ dataSource: this.data }} renderCell={this.onRenderCell.bind(this)}>\r\n        <ViewsDirective>\r\n          <ViewDirective option='Week'/>\r\n          <ViewDirective option='WorkWeek'/>\r\n          <ViewDirective option='Month'/>\r\n        </ViewsDirective>\r\n        <Inject services={[Day, Week, Month]}/>\r\n      </ScheduleComponent>;\r\n    }\r\n}\r\nexport default Calendar;\r\n",["135","136"],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\datasource.js",[],"C:\\Users\\ilani\\project\\volunteers\\src\\scheduler\\editScheduler.jsx",["137","138","139","140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":17},{"ruleId":"148","severity":1,"message":"152","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":12},{"ruleId":"144","replacedBy":"153"},{"ruleId":"146","replacedBy":"154"},{"ruleId":"148","severity":1,"message":"155","line":2,"column":13,"nodeType":"150","messageId":"151","endLine":2,"endColumn":21},{"ruleId":"144","replacedBy":"156"},{"ruleId":"146","replacedBy":"157"},{"ruleId":"148","severity":1,"message":"158","line":8,"column":17,"nodeType":"150","messageId":"151","endLine":8,"endColumn":28},{"ruleId":"148","severity":1,"message":"159","line":8,"column":30,"nodeType":"150","messageId":"151","endLine":8,"endColumn":39},{"ruleId":"148","severity":1,"message":"160","line":16,"column":12,"nodeType":"150","messageId":"151","endLine":16,"endColumn":18},{"ruleId":"148","severity":1,"message":"161","line":18,"column":11,"nodeType":"150","messageId":"151","endLine":18,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":10,"column":19,"nodeType":"164","endLine":18,"endColumn":10},{"ruleId":"162","severity":1,"message":"165","line":18,"column":12,"nodeType":"166","endLine":18,"endColumn":14,"suggestions":"167"},{"ruleId":"148","severity":1,"message":"168","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":12},{"ruleId":"148","severity":1,"message":"169","line":15,"column":24,"nodeType":"150","messageId":"151","endLine":15,"endColumn":37},{"ruleId":"148","severity":1,"message":"170","line":19,"column":19,"nodeType":"150","messageId":"151","endLine":19,"endColumn":27},{"ruleId":"148","severity":1,"message":"171","line":20,"column":11,"nodeType":"150","messageId":"151","endLine":20,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":35,"column":33,"nodeType":"164","messageId":"174","endLine":35,"endColumn":35},{"ruleId":"148","severity":1,"message":"175","line":35,"column":12,"nodeType":"150","messageId":"151","endLine":35,"endColumn":18},{"ruleId":"148","severity":1,"message":"176","line":37,"column":12,"nodeType":"150","messageId":"151","endLine":37,"endColumn":17},{"ruleId":"148","severity":1,"message":"170","line":38,"column":19,"nodeType":"150","messageId":"151","endLine":38,"endColumn":27},{"ruleId":"162","severity":1,"message":"177","line":43,"column":8,"nodeType":"166","endLine":43,"endColumn":10,"suggestions":"178"},{"ruleId":"148","severity":1,"message":"179","line":45,"column":19,"nodeType":"150","messageId":"151","endLine":45,"endColumn":27},{"ruleId":"148","severity":1,"message":"180","line":145,"column":15,"nodeType":"150","messageId":"151","endLine":145,"endColumn":20},{"ruleId":"148","severity":1,"message":"181","line":146,"column":15,"nodeType":"150","messageId":"151","endLine":146,"endColumn":18},{"ruleId":"144","replacedBy":"182"},{"ruleId":"146","replacedBy":"183"},{"ruleId":"148","severity":1,"message":"184","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":29},{"ruleId":"148","severity":1,"message":"159","line":1,"column":31,"nodeType":"150","messageId":"151","endLine":1,"endColumn":40},{"ruleId":"148","severity":1,"message":"185","line":13,"column":73,"nodeType":"150","messageId":"151","endLine":13,"endColumn":83},{"ruleId":"148","severity":1,"message":"186","line":52,"column":20,"nodeType":"150","messageId":"151","endLine":52,"endColumn":29},{"ruleId":"148","severity":1,"message":"170","line":53,"column":19,"nodeType":"150","messageId":"151","endLine":53,"endColumn":27},{"ruleId":"148","severity":1,"message":"187","line":55,"column":11,"nodeType":"150","messageId":"151","endLine":55,"endColumn":30},{"ruleId":"148","severity":1,"message":"188","line":82,"column":11,"nodeType":"150","messageId":"151","endLine":82,"endColumn":26},{"ruleId":"148","severity":1,"message":"189","line":89,"column":11,"nodeType":"150","messageId":"151","endLine":89,"endColumn":23},{"ruleId":"148","severity":1,"message":"190","line":135,"column":15,"nodeType":"150","messageId":"151","endLine":135,"endColumn":16},{"ruleId":"144","replacedBy":"191"},{"ruleId":"146","replacedBy":"192"},{"ruleId":"148","severity":1,"message":"155","line":3,"column":13,"nodeType":"150","messageId":"151","endLine":3,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":13,"column":30,"nodeType":"195","messageId":"196","endLine":13,"endColumn":32},{"ruleId":"193","severity":1,"message":"194","line":13,"column":65,"nodeType":"195","messageId":"196","endLine":13,"endColumn":67},{"ruleId":"144","replacedBy":"197"},{"ruleId":"146","replacedBy":"198"},{"ruleId":"148","severity":1,"message":"184","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":29},{"ruleId":"148","severity":1,"message":"159","line":1,"column":31,"nodeType":"150","messageId":"151","endLine":1,"endColumn":40},{"ruleId":"148","severity":1,"message":"199","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"200","line":18,"column":65,"nodeType":"150","messageId":"151","endLine":18,"endColumn":79},{"ruleId":"148","severity":1,"message":"201","line":18,"column":81,"nodeType":"150","messageId":"151","endLine":18,"endColumn":94},{"ruleId":"148","severity":1,"message":"202","line":19,"column":10,"nodeType":"150","messageId":"151","endLine":19,"endColumn":31},{"ruleId":"203","severity":1,"message":"204","line":36,"column":30,"nodeType":"205","messageId":"206","endLine":36,"endColumn":48,"fix":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Scheduler' is defined but never used.","Identifier","unusedVar","'Demo' is defined but never used.",["208"],["209"],"'ReactDOM' is defined but never used.",["208"],["209"],"'useCallback' is defined but never used.","'useEffect' is defined but never used.","'events' is assigned a value but never used.","'list' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'group.id'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'Form' is defined but never used.","'setVolunteers' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'setStateOfVolunteers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'isEdit' is assigned a value but never used.","'times' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["211"],"'setStyle' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.",["208"],["209"],"'cloneElement' is defined but never used.","'popupClose' is defined but never used.","'setEvents' is assigned a value but never used.","'getMonthCellContent' is assigned a value but never used.","'getWorkCellText' is assigned a value but never used.","'cellTemplate' is assigned a value but never used.","'t' is assigned a value but never used.",["208"],["209"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["208"],["209"],"'Button' is defined but never used.","'ViewsDirective' is defined but never used.","'ViewDirective' is defined but never used.","'DropDownListComponent' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['events'] found.","Property","unnecessarilyComputedProperty",{"range":"212","text":"213"},"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},[1944,1954],"'events'","Update the dependencies array to be: [group.id]",{"range":"218","text":"219"},"Update the dependencies array to be: [location.state]",{"range":"220","text":"221"},[752,754],"[group.id]",[1100,1102],"[location.state]"]